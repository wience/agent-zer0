{
  "title": "Use TradeNO to pay in Mini Program",
  "content": "# Use TradeNO to pay in Mini Program\n\n2021-05-09 18:43\n\nUsers can use the wallet app to pay for the order placed in the mini program if the wallet app provides the payment service. This document introduces the payment by calling the [my.tradePay](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_openapi_tradepay) API with _tradeNo_.\n\n## User experience\n\nTo complete a payment in the mini program, users usually follow the steps below:\n\n1. The user chooses goods in the mini program and create an order, then presses the **Pay** button in the mini program.\n2. The mini program redirects the user to the wallet app and the wallet app displays the payment page.\n3. The user confirms the order information, such as the payee and amount, then clicks the **Pay** button for payment.\n4. After confirming the payment, the wallet app displays the payment result and redirects the user back to the payment result page in the mini program.\n\n## Procedures\n\nTo use the _my.tradePay_ API to initiate a payment in the mini program, mini program developers must complete the following steps:\n\n1. Confirm that the payment service provided by the wallet app supports the payment by _tradeNO_ and obtain the integration guide from the wallet.\n2. Integrate the payment service at the mini program server side.\n3. Create a mini program in the wallet workspace on the Mini Program platform, or make sure that the mini program can be published in the wallet app.\n4. Provide goods and payment service in the mini program.\n5. Publish the mini program.\n\n## Payment process\n\nThe following figure illustrates the payment process:\n\n![Use TradeNO to pay in Mini Program](https://gw.alipayobjects.com/mdn/rms_150082/afts/img/A*xyVgQYA-RAoAAAAAAAAAAABkARQnAQ#align=left&display=inline&height=2160&margin=%5Bobject%20Object%5D&originHeight=2160&originWidth=2835&status=done&style=none&width=2835)\n\nFigure 1. Payment process\n\nThe payment process contains the following steps:\n\n01. The user places an order in the mini program. (Step 1)\n02. The mini program client sends the create order request to the mini program server by calling the [my.request](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_network_request) API. (Step 2)\n03. The mini program server creates the order and sends the request to the wallet server via the server API provided by the wallet. (Step 3 & 4)\n04. The wallet server creates the order and generates _tradeNo_, and returns _tradeNo_ to the mini program server. (Step 5-7)\n05. The mini program server returns _tradeNo_ to the mini program client. (Step 8)\n06. The mini program client initiates the payment request by calling the [my.tradePay](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_openapi_tradepay) API with _tradeNo_ to the wallet app. (Step 9)\n07. The wallet app obtains the order information and renders the cashier page. (Step 10-12)\n08. The user confirms the payment and the wallet processes the payment request. (Step 13-16)\n09. The wallet app returns the payment result to the mini program client. At the same time, the wallet server returns the payment result to the mini program server. (Step 17 & 18)\n10. The mini program client displays the payment result. (Step 19)\n\n**Note:**\n\nThe payment flow is for reference and might differ depending on the API implementation of the wallet.\n\n## Sample code\n\nSample code for the my.tradePay API calling:\n\ncopy\n\n```javascript\nmy.tradePay({\n    tradeNO: '201711152100110410533667792',\n    success: function(res) {\n        my.alert({\n            content: JSON.stringify(res),\n        });\n    },\n    fail: function(res) {\n        my.alert({\n            content: JSON.stringify(res),\n        });\n    },\n});\n```",
  "date": "2021-05-09",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_openapi_pay-with-tradeno",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev-old_api_openapi_pay-with-tradeno.json"
}