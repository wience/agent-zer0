{
  "title": "Learn More About Todo App Demo",
  "content": "# Learn More About Todo App Demo\n\n2021-05-09 18:43\n\n## Overview\n\nWe will introduce the development of a Mini Program in detail through the Todo App Demo.\n\n## Global Configuration\n\nThe `app.js` is the entry point to a Mini Program, you can configure the lifecycle of a Mini Program, declare global variables, and perform app initialization in this file. The following code snippet shows an example of calling APIs for storage and getting user information. For more APIs, see [API document](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_overview).\n\ncopy\n\n```javascript\n// Call the storage API to get the stored data\nconst todos = my.getStorageSync({key:'todos'}).data || [\\\n    { text: 'Learning Javascript', completed: true },\\\n    { text: 'Learning ES2016', completed: true },\\\n    { text: 'Learning Mini Program ', completed: false },\\\n  ];\n\nApp({\n  // Declare global data\n  todos,\n\n  userInfo: null,\n\n  // Declare global method\n  setTodos(todos) {\n    this.todos = todos;\n    // Call storage API to store data\n    my.setStorageSync({key:'todos', data:todos});\n  },\n\n  getUserInfo() {\n    return new Promise((resolve, reject) => {\n      if (this.userInfo) resolve(this.userInfo);\n      // Call user authorization API to get user info\n      my.getAuthCode({\n        success: (authcode) => {\n          console.info(authcode);\n\n          my.getAuthUserInfo({\n            scopes: ['auth_user'],\n            success: (res) => {\n              this.userInfo = res;\n              resolve(this.userInfo);\n            },\n            fail: () => {\n              reject({});\n            },\n          });\n        },\n        fail: () => {\n          reject({});\n        },\n      });\n    });\n  },\n});\n```\n\nThe `app.json` is the global configuration file of the Mini Program, where it is possible to configure the general navigation bar title, window background color and other configurations of the Mini Program. For more configurations, see [global configuration documentation](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_app_global-configuration).\n\ncopy\n\n```json\n{\n  \"pages\": [\\\n    \"pages/todos/todos\",\\\n    \"pages/add-todo/add-todo\"\\\n  ],\n  \"window\": {\n    \"defaultTitle\": \"Todo App\"\n  }\n}\n```\n\nThe `app.acss` is the global style of a Mini Program. The selectors defined in the app.acss can be applied to all pages in the Mini Program project.\n\ncopy\n\n```css\npage {\n  flex: 1;\n  display: flex;\n}\n```\n\nThe page selector is a special selector supported by the framework, which works with the page root node container available in the framework.\n\n## Mini Program Page\n\nWe have two pages in this demo project: Todo List page and Add Todo page, both reside in the `pages` directory. All page paths of the Mini Program must be declared in the `app.json`, and a page path starts from the project root directory and should omit the filename extension. The very first path declared `app.json` is the home page of a Mini Program.\n\nEach [Mini Program page](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_page_overview) consists of four types of files under the same directory:\n\n- JS logic script file with the `.js` extension\n\n- Configuration file with the `.json` extension\n\n- Style file with the `.acss` extension\n\n- UI Layout file with the `.axml` extension.\n\n### Todo List Page\n\nThe todos.axml is the structure template file of the page:\n\ncopy\n\n```html\n<view class=\"page-todos\">\n  <view class=\"user\">\n    <image class=\"avatar\" src=\"{{user.avatar}}\" background-size=\"cover\"></image>\n    <view class=\"nickname\">{{user.nickName}}'s Todo List</view>\n  </view>\n  <view class=\"todo-items\">\n    <checkbox-group class=\"todo-items-group\" onChange=\"onTodoChanged\">\n      <label class=\"todo-item\" a:for=\"{{todos}}\">\n        <checkbox value=\"{{item.text}}\" checked=\"{{item.completed}}\" />\n        <text class=\"{{item.completed ? 'checked' : ''}}\">{{item.text}}</text>\n      </label>\n    </checkbox-group>\n    <view class=\"todo-item\">\n      <button onTap=\"addTodo\">Add Todo</button>\n    </view>\n  </view>\n</view>\n```\n\nThis UI layout have built-in UI components such as [`<view/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_view-container_view), [`<image/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_multimedia_image), [`<text/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_basic-content_text), [`<button/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_form-component_button), [`<label/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_form-component_label) and [`<checkbox/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_form-component_checkbox) to build up the page structure, and we use `a:for` attribute to perform list rendering which iterates the todos list and render a `label` for each todo data respectively.\n\nFor binding data, see [Data binding](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_axml-reference_data-binding) document. For binding event, see [event handling](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_event-system_event-introduction) document.\n\nThe `todos.js` is the logic script file of the page:\n\ncopy\n\n```javascript\n// Get global app instance\nconst app = getApp();\n\nPage({\n  data: {},\n  onLoad() {\n    // Get user information and render\n    app.getUserInfo().then(\n      user => this.setData({\n        user,\n      }),\n    );\n  },\n  // Listen to lifecycle\n  onShow() {\n    // Render global data to current page\n    this.setData({ todos: app.todos });\n  },\n  // Event handler\n  onTodoChanged(e) {\n    // Modify global data and re-render\n    const checkedTodos = e.detail.value;\n    app.setTodos(app.todos.map(todo => ({\n      ...todo,\n      completed: checkedTodos.indexOf(todo.text) > -1,\n    })));\n    this.setData({ todos: app.todos });\n  },\n  addTodo() {\n    // Call page jump API for page jump\n    my.navigateTo({ url: '../add-todo/add-todo' });\n  },\n});\n```\n\nIn this file, we have:\n\n- Listen to and process the lifecycle function of the page ( `onHide`, `onShow`, `onLoad`, `onUnload`, `onReady`).\n\n- Get Mini Program app instance and other page instances ( `getApp`, `getCurrentPages`).\n\n- Declare and process data\n\n- Respond to page interaction events, call APIs, etc.\n\n- Attention here: the `app.todos` object is the global variable defined in `app.js`.\n\nThe `todos.acss` is the style file of the page:\n\ncopy\n\n```css\n.page-todos {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.user {\n  display: flex;\n  padding: 30px 30px 0 30px;\n}\n\n.avatar {\n  width: 128rpx;\n  height: 128rpx;\n  margin-right: 40rpx;\n  border-radius: 50%;\n}\n\n.nickname {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 40rpx;\n}\n\n.todo-items {\n  padding: 80rpx;\n}\n\n.todo-items-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.checked {\n  color: #d9d9d9;\n  text-decoration: line-through;\n}\n\n.todo-item {\n  margin-bottom: 15px;\n}\n```\n\nThe `acss` styling file is not mandatory. See [Style](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_acss-reference) document for `acss` file syntax. When a page has the style sheet, the style rule in the page style sheet overrides the style rules in the `app.acss`. if the style sheet is not specified for the page, it is also possible to directly use the style rules specified in `app.acss`.\n\nThe `todos.json` is the configuration file of the page. Here it is an empty file.\n\nThe configuration file is not mandatory. When a page has the configuration file, the configuration item overwrites the same configuration items in the window of app.json. If no page configuration file is specified, the page directly uses the default configuration in app.json. Therefore, the index page title is the Todo App specified for app.json.\n\n### Add Todo Page\n\nThe `add-todo.axml` is the structure template file of the page:\n\ncopy\n\n```html\n<view class=\"page-add-todo\">\n  <view class=\"add-todo\">\n    <input\n      class=\"add-todo-input\"\n      placeholder=\"What needs to be done?\"\n      onBlur=\"onBlur\"\n      value=\"{{inputValue}}\"\n    />\n  </view>\n  <view class=\"todo-footer\">\n    <add-button text=\"Add Todo\" onClickMe=\"add\" ></add-button>\n  </view>\n</view>\n```\n\nThere are two core functions in the page:\n\n1. Use the [`<input/>`](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/component_form-component_input) component to accept user input.\n\n2. The `<add-button>` is a [custom component](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/framework_custom-component_create-custom-component_overview). We can wrap the whole codes of some function into a custom component for easy reuse elsewhere.\n\n`add-todo.js` page logic code:\n\ncopy\n\n```javascript\nconst app = getApp();\n\nPage({\n  data: {\n    inputValue: '',\n  },\n  onBlur(e) {\n    this.setData({\n      inputValue: e.detail.value,\n    });\n  },\n  add() {\n    app.todos = app.todos.concat([\\\n      {\\\n        text: this.data.inputValue,\\\n        compeleted: false,\\\n      },\\\n    ]);\n    my.navigateBack();\n  },\n});\n```\n\n`add-todo.acss` is consistent with `todos.acss` usage and will not be described again.\n\nSince the `add-todo.json` refers to a custom component, it should be declared in json, otherwise error will be reported:\n\ncopy\n\n```json\n\"usingComponents\": {\n    \"add-button\": \"/components/add-button/add-button\"\n}\n```\n\nWe will learn how to publish a Mini Program in the [next tutorial](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/quick-start_release-mini-program).",
  "date": "2021-05-09",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/quick-start_learn-more-about-todo-app-demo",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev-old_quick-start_learn-more-about-todo-app-demo.json"
}