{
  "title": "/v2/authorizations/applyToken",
  "content": "# /v2/authorizations/applyToken\n\n2021-05-09 18:43\n\nPOST `/v2/authorizations/applyToken`\n\nThe `applyToken` API is used to obtain the access token.\n\nThis interface can be used in the following cases:\n\n- After the merchant receives **authCode** from Mini-Program, the merchant uses this interface to request the access token from e-wallet. In this scenario, the interface generally needs to be used with the Authorization Prepare Interface.\n- When the original token expires, the merchant requests a new access token by using the refresh token. In this scenario, this interface can be used independently.\n\n# Message structure\n\n## Request\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| authClientId | String | No | The unique identifier allocated for client.<br>Max. length: 128 characters. | \"202016726873874774774xxxx\" |\n| grantType | String | Yes | Indicates which parameter is to be used to obtain the access token. Possible values are:<br>- `AUTHORIZATION_CODE`: the authCode is to be used to retrieve the accessToken<br>- `REFRESH_TOKEN`: the refreshToken is to be used to retrieve the accessToken<br>Max. length: 64 characters. | \"AUTHORIZATION\\_CODE\" |\n| customerBelongsTo | String | NO | The e-wallet that the customer uses. Possible values are:<br>- `TRUEMONEY`<br>- `ALIPAY_HK`<br>- `TNG`<br>- `ALIPAY_CN`<br>- `GCASH`<br>- `DANA`<br>- `KAKAOPAY`<br>- `BKASH`<br>If you call the interface through AC, you must pass this parameter. | \"TNG\" |\n| authCode | String | No | It is required when **grantType** is **AUTHORIZATION\\_CODE**.<br>The authorization code, which is used by confidential and public clients to exchange an authorization code for an access token. After the user returns to the client via the Mini-program API, the Mini-program will get the authorization code from the response of and use it to request an access token.<br>Max. length: 32 characters. | \"2810111301lGZcM9CjlF91WH00039190xxxx\" |\n| refreshToken | String | No | **refreshToken** is required when <br>**grantType** is **REFRESH\\_TOKEN**.<br>The refresh token, which is used by the auth client to exchange for a new access token when the access token expires. By using the refresh token, new access tokens can be obtained without further interaction with the user.<br>Max. length: 128 characters. | \"2810111301lGZcM9CjlF91WH00039190xxxx\" |\n| extendInfo | String | No | The extend information, wallets and merchants can put extending information in this property.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n## Response\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| result | [**Result**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_data_dict#sHXZc) | Yes | The request result, which contains information related to the request result, such as status and error codes. | {<br>    \"resultCode\": \"SUCCESS\",<br>    \"resultStatus\": \"S\",<br>    \"resultMessage\": \"success\"  <br>} |\n| accessToken | String | No | An access token that can be used to access the user resource scope.<br>When authorization application is successful **\\[result.resultStatus == S\\]**, the auth client might use accessToken to acccess the corresponding user's resource scope.<br>Max. length: 128 characters. | \"281010033AB2F588D14B43238637264FCA5AAF35xxxx\" |\n| accessTokenExpiryTime | String/Datetime | No | Access token expiration time, which follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. After this time, authClient will not be able to use this token to deduct from user's account.<br>This parameter must be returned when authorization application is successful **\\[result.resultStatus == S\\]**,  and the accessToken will be invalid after **accessTokenExpiryTime.** | \"2019-06-06T12:12:12+08:00\" |\n| refreshToken | String | No | The refresh token that is used by the auth client to exchange for a new access token when the access token expires. By using the refresh token, new access tokens can be obtained without further interaction with the user.<br>This parameter must be returned when authorization application is successful **\\[result.resultStatus == S\\]**, and the merchant can use the **refreshToken** to request for a new **accessToken.**<br>Max. length: 128 characters. | \"2810100334F62CBC577F468AAC87CFC6C9107811xxxx\" |\n| refreshTokenExpiryTime | String/Datetime | No | Refresh token expiration time, after which the auth client cannot use this token to retrieve a new access token. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.<br>This parameter must be returned when authorization application is successful **\\[result.resultStatus == S\\]**,  and the merchant will not be able to use the refreshToken to retrieve a new **accessToken** after **refreshTokenExpiryTime.** | \"2019-06-08T12:12:12+08:00\" |\n| customerId | String | No | Resource owner id, maybe user id, app id of merchant's application, merchant id.<br>Max. length: 64 characters. | \"1000001119398804xxxx\" |\n| extendInfo | String | No | the extend information,wallet and merchant can put extend info here.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n### Result process logic\n\nIn the response, the `result.resultStatus` field indicates the result of processing a request as follows.\n\n|     |     |\n| --- | --- |\n| **resultStatus** | **Decription** |\n| S | The  authorization token application request is successful. The merchant can use the access token to access the corresponding user resource scope.<br>The corresponding `result.resultCode` is \"SUCCESS\" and the  `result.resultMessage`  is \"Success\". |\n| A | The request is accepted by wallets.<br>The corresponding `result.resultCode` is \"ACCEPT\"; and the  `result.resultMessage` varies based on different situations. |\n| U | The API status is unknown.  AuthClient may guide user to try again.<br>The corresponding `result.resultCode` is \"UNKNOWN\\_EXCEPTION\" and `result.resultMessage`  is \"An API calling is failed, which is caused by unknown reasons.\".<br>For details, see the [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/error_codes#oyy9K) section. |\n| F | The request fails to send.AuthClient may guide user to try again.<br>The corresponding `result.resultCode`  and `result.resultMessage` vary based on different situations. For details, see the following [Error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_applytoken#QiyKe) section. |\n\n# Error codes\n\nError codes are usually classified into the following categories:\n\n- [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/error_codes#oyy9K): are common for all Mini Program OpenAPIs.\n- API-specific error codes: are listed in the following table.\n\n|     |     |     |\n| --- | --- | --- |\n| **resultStatus** | **resultCode** | **resultMessage** |\n| F | AUTH\\_CLIENT\\_UNSUPPORTED\\_GRANT\\_TYPE | The auth client do not support this grant type. |\n| F | INVALID\\_AUTH\\_CLIENT | The auth client is invalid. |\n| F | INVALID\\_AUTH\\_CLIENT\\_STATUS | Invalid auth client status. |\n| F | INVALID\\_REFRESH\\_TOKEN | The refresh token is invalid. |\n| F | EXPIRED\\_REFRESH\\_TOKEN | The refresh token is expired. |\n| F | USED\\_REFRESH\\_TOKEN | The refresh token has been used. |\n| F | INVALID\\_CODE | The authorization code is invalid. |\n| F | USED\\_CODE | The authorization code has been used. |\n| F | EXPIRED\\_CODE | The authorization code is expired. |\n| F | REFERENCE\\_CLIENT\\_ID\\_NOT\\_MATCH | The reference client id does not match. |\n| F | EXPIRED\\_AGENT\\_TOKEN | The access token of mini program is expired. |\n| F | INVALID\\_AGENT\\_TOKEN | The access token of mini program is invalid. |\n\n# Sample\n\nThe authorization token application is used to exchange the access token based on the code after obtaining the code.\n\n![/v2/authorizations/applyToken](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\n1. The Mini Program calls the my.getAuthCode interface to obtain the authorization code from e-wallet. (Step 1)\n2. The e-wallet returns the authorization code to the Mini Program (Step 7)\n3. The Mini Program sends authorization code to the merchant server (Step 8)\n4. The merchant server calls the applyTokeninterface to apply for the access token from the e-wallet server and the e-wallet server returns the access token and customer ID to the merchant server. The access token should be kept in the merchant server only, which means that it should not be returned to the Mini Program. (Step 9 and Step 11).\n\n**Note**: Other steps are covered by the e-wallet.\n\n## Request\n\n**A.** **Retrieving** `accessToken` **with** `authCode`\n\ncopy\n\n```json\n{\n  \"authClientId\": \"202016726873874774774xxxx\",\n  \"grantType\": \"AUTHORIZATION_CODE\",\n  \"authCode\": \"2810111301lGZcM9CjlF91WH00039190xxxx\"\n}\n```\n\n**B.** **Retrieving** `accessToken` **with** `refreshToken`\n\ncopy\n\n```json\n{\n  \"grantType\": \"REFRESH_TOKEN\",\n  \"refreshToken\": \"2810111301lGZcM9CjlF91WH00039190xxxx\"\n}\n```\n\n- **authCode** is from the my.getAuthCode JS-API, you can obtain the authCode in the success callback. when **grantType == AUTHORIZATION\\_CODE** means that we are requesting for the accessToken by the authCode.\n- **refreshToken** is obtained from the response of the previous accessToken Application call. while **grantType == REFRESH\\_TOKEN** means that we are requesting for the accessToken by providing the refreshToken.\n\n## Response\n\ncopy\n\n```json\n{\n  \"result\": {\n    \"resultCode\": \"SUCCESS\",\n    \"resultStatus\": \"S\",\n    \"resultMessage\": \"success\"\n  },\n  \"accessToken\": \"281010033AB2F588D14B43238637264FCA5AAF35xxxx\",\n  \"accessTokenExpiryTime\": \"2019-06-06T12:12:12+08:00\",\n  \"refreshToken\": \"2810100334F62CBC577F468AAC87CFC6C9107811xxxx\",\n  \"refreshTokenExpiryTime\": \"2019-06-08T12:12:12+08:00\",\n  \"customerId\":\"1000001119398804xxxx\"\n}\n```\n\n- **result.resultStatus==S** shows that the application is successful,\n- AuthClient can make use of **accessToken,** 281010033AB2F588D14B43238637264FCA5AAF35, to access the user's resource scope before 2019-06-06T12:12:12+08:00 **\\[accessTokenExpiryTime\\].**\n- AuthClient  can make use of **refreshToken,** 2810100334F62CBC577F468AAC87CFC6C9107811, to request for a new accessToken before 2019-06-08T12:12:12+08:00 **\\[refreshTokenExpiryTime\\].**",
  "date": "2021-05-09",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_applytoken",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev-old_v2_applytoken.json"
}