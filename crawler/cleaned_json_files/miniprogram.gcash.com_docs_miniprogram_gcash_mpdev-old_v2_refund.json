{
  "title": "/v2/payments/refund",
  "content": "# /v2/payments/refund\n\n2021-05-09 18:43\n\nPOST `/v2/payments/refund`\n\nThe `refund` API is used to initiate a refund of a successful payment, refund a transaction and return money to the payer. The transaction can be refunded partially or fully. This API returns `SUCCESS` when deducting money from the merchant is successful.\n\n**Note:**\n\n1) The merchant/partner submits a refund request to wallets directly\n\n2) Wallets determines whether the refund is successful based on its own payment status and respond to merchants/partners.\n\n3) Multiple refund requests are supported for one successful payment, but the total refund amount can not be greater than the payment amount.\n\n# Message structure\n\n## Request\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| refundRequestId | String | Yes | The unqiue ID of a refund generated by merchants.<br>- Max. length: 64 characters.<br>- This field is used for [idempotence](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/api_idempotency) control. For the refund requests which are initiated with the same `refundRequestId` and reach a final status (S or F), the  must return the unique result. | \"2019112719074101000700000088881xxxx\" |\n| paymentId | String | No | The unqiue ID of the corresponding original payment.<br>Max. length: 64 characters. | \"201911271907410100070000009999xxxx\" |\n| paymentRequestId | String | No | The paymentRequestId for the corresponding original payment.<br>Max. length: 64 characters. | \"20200101234567890133333xxxx\" |\n| refundAmount | [**Amount**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_data_dict#2umUE) | Yes | Refund amount. | {<br>    \"currency\": \"USD\",<br>    \"value\": \"10000\"<br>} |\n| refundReason | String | No | Refund reason.<br>Max. length: 256 characters. | \"have returned goods to the shop\" |\n| extendInfo | String | No | The extend information, wallets and merchants can put extending information in this property.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n## Response\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| result | [**Result**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_data_dict#sHXZc) | Yes | The request result, which contains information such as status and error codes. | {<br>    \"resultCode\": \"SUCCESS\",<br>    \"resultStatus\": \"S\",<br>    \"resultMessage\": \"success\"<br>} |\n| refundId | String | No | Unique refund order number. It is generated by Wallet, which uniquely identifies the refund.<br>It is mandatory when the **result.resultStatus** is **S**.<br>Max. length: 64 characters. | \"2019112719074101000700000019000xxxx\" |\n| refundTime | String/Datetime | No | Deduct money from merchant success time, after then will start to refund money to user. which follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. It is mandatory when the **result.resultStatus** is **S**. | \"2019-11-27T12:01:01+08:30\" |\n| extendInfo | String | No | The extensive information returned by wallets.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n### Result Process Logic\n\nIn the response, the `result.resultStatus` field indicates the result of processing a request as follows.\n\n|     |     |\n| --- | --- |\n| **resultStatus** | **Decription** |\n| S | The corresponding `result.resultCode` is \"SUCCESS\" and the  `result.resultMessage`  is \"Success\".<br>It means that the refund is successful, the merchant/partner can process as success. |\n| A | The corresponding `result.resultCode` is \"ACCEPT\"; and the  `result.resultMessage` varies based on different situations. |\n| U | The corresponding `result.resultCode` is \"UNKNOWN\\_EXCEPTION\" and `result.resultMessage`  is \"An API calling is failed, which is caused by unknown reasons.\". For details, see the [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/error_codes#oyy9K) section.<br>It means that when handling the refund request, an unknown exception occurs. The merchant/partner can call the Refund Inquiry ( `inquiryRefund`) API to query or retry this Refund ( `refund`) API.  <br>What needs to note is as follow:<br>- U status (inquiry/retry still gets U)  can not set to fail or success on merchant/partner system.<br>- U status (inquiry/retry still gets U)  should not refund/charge to user by offline (Maybe will make fund loss).<br>If other response (almost never occur), the merchant/partner should process like U. |\n| F | That means this transaction is failed. The corresponding `result.resultCode`  and `result.resultMessage` vary based on different situations. <br>It means that the refund is failed. The failure reasons can be the followings, but not limited to: <br>- The refund date time exceeds the allowable refund window ( `result.resultCode` = **REFUND\\_WINDOW\\_EXCEED**).<br>- The refund amount is greater than the payment amount.<br>For details, see the following [Error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_refund#QiyKe) section. |\n\n# Error codes\n\nError codes are usually classified into the following categories:\n\n- [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/error_codes#oyy9K): are common for all Mini Program OpenAPIs.\n- API-specific error codes: are listed in the following table.\n\n|     |     |     |\n| --- | --- | --- |\n| **resultStatus** | **resultCode** | **resultMessage** |\n| U | REFUND\\_IN\\_PROCESS | Refund is under processing. |\n| F | REPEAT\\_REQ\\_INCONSISTENT | Repeated submit, and requests are inconsistent. |\n| F | PARTNER\\_STATUS\\_ABNORMAL | Partner status abnormal. |\n| F | ORDER\\_NOT\\_EXIST | Order does not exist. |\n| F | ORDER\\_STATUS\\_INVALID | Order status is invalid. |\n| F | REFUND\\_WINDOW\\_EXCEED | Exceed Refund window. |\n| F | REFUND\\_AMOUNT\\_EXCEED | The total refund amount has exceed the payment amount. |\n| F | PARTNER\\_BALANCE\\_NOT\\_ENOUGH | The partner balance is not enough. |\n| F | CURRENCY\\_NOT\\_SUPPORT | The currency is not supported. |\n| F | EXPIRED\\_AGENT\\_TOKEN | The agent token of Mini Program is expired. |\n| F | INVALID\\_AGENT\\_TOKEN | The agent token of Mini Program is invalid. |\n\n# Sample\n\nFor example, a wallet user applies for refund of 100 USD of a successful payment at the merchant/partner. So the merchant/partner will call this refund API to the wallet to refund money to users.\n\n![/v2/payments/refund](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\n1. User can start a refund request from the Mini Program or the merchant cashier.\n2. The merchant server calls this refund interface to refund.\n3. E-wallet returns the refund result to the merchant server.\n4. The merchant should return the refund result to the Mini Program or the merchant cashier.\n\n## Request\n\ncopy\n\n```json\n{\n  \"refundRequestId\": \"2019112719074101000700000088881xxxx\",\n  \"paymentId\": \"201911271907410100070000009999xxxx\",\n  \"refundAmount\": {\n    \"currency\": \"USD\",\n    \"value\": \"10000\"\n  }\n}\n```\n\n- **refundRequestId** is the unique ID of this refund request, generated by merchant/partner, merchant/partner should make sure it is unique, because wallet will use **refundRequestId** to do idempotent process.\n- **paymentId** is the payment ID generated by Wallet, which is the unique payment identifier associated with this refund.\n- **refundAmount** describes 100 USD should refund to user, refund amount should less than origin payment amount. The amount to pay out for this **refund.refundAmount.currency** and **paymentAmount.currency** in [payment request](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/xww2sz) are the same. And if there are multiple refunds for a particular payment, the total successful refunded amount cannot exceed the payment amount in the payment transaction.\n\n**Note:**\n\n- **paymentId** and **paymentRequestId** can not both empty, wallet has to find out the origin payment order based on **paymentId** or **paymentRequestId**.\n\n## Response\n\ncopy\n\n```json\n{\n  \"result\": {\n    \"resultCode\": \"SUCCESS\",\n    \"resultStatus\": \"S\",\n    \"resultMessage\": \"success\"\n  },\n  \"refundId\": \"2019112719074101000700000019000xxxx\",\n  \"refundTime\": \"2019-11-27T12:01:01+08:30\"\n}\n```\n\n- **result.resultStatus==S** shows that theWallet refund is successful.\n- **refundId** is generated by Wallet, uniquely identifies the refund.\n- **refundTime** describes the success date time of this refund.",
  "date": "2021-05-09",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev-old/v2_refund",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev-old_v2_refund.json"
}