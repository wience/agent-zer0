{
  "title": "my.onSocketClose",
  "content": "# my.onSocketClose\n\n2022-07-03 18:44\n\nUse this API to listen to the event of disabling the WebSocket connection.\n\n## Sample Code\n\ncopy\n\n```javascript\nonLoad() {\n    // Note: The registration of callback only needs to be done once during the start-up phase of the Mini Program, multiple calls have multiple callbacks.\n    my.onSocketClose((res) => {\n      my.alert({content: 'The connection is disabled!'});\n      this.setData({\n        sendMessageAbility: false,\n        closeLinkAbility: false,\n      });\n    });\n    // Note: The registration of callback only needs to be done once during the start-up phase of the Mini Program, multiple calls have multiple callbacks.\n    my.onSocketOpen((res) => {\n      my.alert({content: 'The connection is enabled!'});\n      this.setData({\n        sendMessageAbility: true,\n        closeLinkAbility: true,\n      });\n    });\n\n    my.onSocketError(function(res){\n      my.alert('The webSocket connection fails. Please check!' + res);\n    });\n\n    // Note: The registration of callback only needs to be done once during the start-up phase of the Mini Program, multiple calls have multiple callbacks.\n    my.onSocketMessage((res) => {\n      my.alert({content: 'Data received!' + JSON.stringify(res)});\n    });\n  }\n\nconnect_start() {\n    my.connectSocket({\n      url: 'Server URL', // The developer server interface URL must use WSS protocol and the domain name must be a legitimate one configured in the backend.\n      success: (res) => {\n        my.showToast({\n          content: 'success', // Text content\n        });\n      },\n      fail:()=>{\n        my.showToast({\n          content: 'fail', // Text content\n        });\n      }\n    });\n  },\n```\n\n**Note:** The case is only for reference. Please use your own URL to test.\n\n## Parameters\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Type** | **Required** | **Description** |\n| callback | Function | Yes | The callback function for the event of disabling the WebSocket connection. |",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/API_Network_onSocketClose",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_API_Network_onSocketClose.json"
}