{
  "title": "my.request",
  "content": "# my.request\n\n2022-07-03 18:44\n\nNetwork request of a Mini Program.\n\n## Notes\n\n1. Configure the domain name whitelist at first under `Mini Program` \\> `Configuration` \\> `Server Domain Whitelist`. The Mini Program can only communicate with the domain names in the whitelist during the API calls: `my.request` (send HTTP request), `my.uploadFile` (upload file), and `my.downloadFile` (download file).\n2. During the Mini Program development, in the developer tool, select whether to ignore the httpRequest domain name validity check under `Details` \\> `Domain name information`. If yes, the domain name validity will not be checked in the simulator, preview, and real machine debugging scenarios. However, before the Mini Program goes online, you must maintain the domain names in the whitelist, otherwise, the domain names cannot be effective in the official release.\n\nImportant: `my.request` request header is **{'content-type': 'application/json'}** by default,instead of **{'content-type': 'application/x-www-form-urlencoded'}**.\n\n## Sample Code\n\ncopy\n\n```javascript\nmy.request({\n  url: 'https://httpbin.org/post',\n  method: 'POST',\n  data: {\n    from: 'Mini Program',\n    production: 'JSAPI',\n  },\n  dataType: 'json',\n  success: function(res) {\n    my.alert({content: 'success'});\n  },\n  fail: function(res) {\n    my.alert({content: 'fail'});\n  },\n  complete: function(res) {\n    my.hideLoading();\n    my.alert({content: 'complete'});\n  }\n});\n\nconst task = my.request({url: 'https://httpbin.org/post'})\ntask.abort()\n```\n\n## Parameters\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Type** | **Required** | **Description** |\n| url | String | Yes | Target server url. |\n| headers | Object | No | Set the request HTTP header. The default value is <br>`{'content-type': 'application/json'}`<br>. |\n| method | String | No | The default value is GET. Both GET and POST are supported. |\n| data | Object | No | Request parameter. |\n| timeout | Number | No | Timeout period in ms. The default value is 30000. |\n| dataType | String | No | Expected format of the returned data. The following formats are supported:<br>- json<br>- text<br>- base64<br>The default format is json. |\n| success | Function | No | The callback function for a successful API call. |\n| fail | Function | No | The callback function for a failed API call. |\n| complete | Function | No | The callback function used when the API call is completed. This function is always executed no matter the call succeeds or fails. |\n\n### Data Parameter Description\n\nData transferred to the server is eventually expressed in String. If the type is not String, the data will be converted into String. Conversion rules are:\n\n- If the method is `GET`, the data will be converted into query string: encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...\n- If the method is `POST` and the `headers['content-type']` is `application/json`, the data will be JSON serialized.\n- If the method is `POST` and the `headers['content-type']` is `application/x-www-form-urlencoded`, the data will be converted into query string: encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...\n\n### Success Callback Function\n\nThe type of the incoming parameter is Object with the following attributes:\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Type** | **Description** |\n| data | String | Response data. The format depends on the value of `dataType` in the request. |\n| status | Number | Response code. |\n| headers | Object | Response header. |\n\n## Error Code\n\n|     |     |\n| --- | --- |\n| **Error** | **Description** |\n| 2 | Incorrect parameter. Check whether the URL is in HTTPS format and all parameters are correct. |\n| 4 | Not authorized to call the interface. The error might result from the following:<br>- The server domain whitelist is not configured. In this case, configure the server domain whitelist under `Mini Program` > `Configuration` > `Server Domain Whitelist`. The mini program can only communicate with the domains in the whitelist when calling the `my.request` and `my.uploadFile` APIs. If the server domain whitelist is updated, the whitelist comes effective only when a new version of the mini program is published.<br>- Errors occur with your account and you cannot login to the mini program platform. In this case, when you debug in the Mini Program studio, select _Ignore httpRequest domain name validity check_ or _Ignore Webview domain name validity check_ under `Details` \\> `Domain name information`, and then preview the debugging request.<br>- Check whether the HTTP request domain name is incorrect. |\n| 12 | Network error. |\n| 13 | Timeout. |\n| 14 | Decoding failure. |\n| 19 | HTTP error. |\n| 20 | Request stopped/service end traffic limit. |\n\n**Note:**\n\nThe error code of 14 might be returned in the following cases:\n\n- When the value of `dataType` is `json`, the Mini Program framework firstly perform the `JSON.prase` operation on the returned results. If the parsing fails, the error code of 14 is returned.\n- When the value of `dataType` is `text` and the returned content has a bad format, the error code of 14 is returned.\n\nTo solve the error, check whether the `dataType` setting is incorrect firstly.\n\n## Return Value\n\n### RequestTask\n\nNetwork request task object.\n\n#### Method\n\nRequestTask.abort()\n\n**Note:**\n\nIf **Not authorized to call the interface** is returned, configure the domain whitelist under `Mini Program` \\> `Configuration` \\> `Server Domain Whitelist` in the mini program platform.",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_network_request",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_api_network_request.json"
}