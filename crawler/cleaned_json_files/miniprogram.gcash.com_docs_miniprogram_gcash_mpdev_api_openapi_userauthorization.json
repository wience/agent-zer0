{
  "title": "User authorization",
  "content": "# User authorization\n\n2022-07-07 17:08\n\nUser authorization describes the process of obtaining a user's consent to access user information. It is based on the industry standard OAuth2.0 authorization mechanism. On the Mini Program Platform, developers need to get permission from users in the mini program before obtaining and using their information.\n\n## Terminology\n\n|     |     |\n| --- | --- |\n| **Name** | **Description** |\n| Scope of authorization<br>(scope) | A scope represents the scope of permissions that developers need to request user authorization. A scope contains at least one open API interface or JSAPI interface. One authorization can combine multiple scopes for combined authorization. |\n| Authorization code<br>(auth\\_code) | Temporary user authorization credentials. After obtaining it, promptly exchange it for the access token mentioned below. |\n| Access token or authorization token<br>(access\\_token or auth\\_token) | Long-term authorization credentials. It is used to call the site gateway to call the server-side authorization interface. Pay attention to the scope and validity of the authorizationÂ token. |\n| Refresh token<br>(refresh\\_token) | Used to refresh and obtain a new access token after the access token expires. The refresh token also has a validity period. |\n\n## Scope list\n\n|     |     |\n| --- | --- |\n| **Scope** | **Description** |\n| auth\\_base | Authorized to obtain the unique user ID. |\n| auth\\_user | Authorized to obtain the user information. |\n\n## Access guidelines\n\n### Access process\n\nTake obtaining the user information as an example. The overall access process is illustrated as below:\n\n![image](https://gw.alipayobjects.com/mdn/rms_150082/afts/img/A*bm4uRLKiV9wAAAAAAAAAAABkARQnAQ)\n\n1. The mini program calls the `getAuthCode` JSAPI to get the authorization code ( `authCode`) from the wallet \\[1.1\\].\n2. The mini program calls the merchant server API with `authCode` \\[2\\].\n3. The merchant server calls the `applyToken` OpenAPI and the authorized platform server returns the access token \\[2.2\\].\n4. The merchant server saves the access token and returns the authorization result to the mini program \\[2.4\\].\n\n**Note**: To authorize other information, use a different scope for the scopes parameter when calling `getAuthCode`.\n\n### Obtain authCode\n\nYou can obtain user authorization by calling the [my.getAuthCode](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_getauthcode) JSAPI and fetch the `authCode` in the success callback. For example:\n\ncopy\n\n```javascript\nmy.getAuthCode({\n  scopes: ['auth_user'],\n  success: (res) => {\n    my.alert({\n      content: res.authCode,\n    });\n  },\n  failed: (res) => {\n      console.log(res.authErrorScopes)\n  },\n});\n```\n\n### Obtain accessToken\n\n- For merchants: Before obtaining an `accessToken`, you need to get an `authCode` from the wallet. Then you can call the `applyToken` OpenAPI in exchange for `accessToken`.\n- For developers: Developers can exchange `accessToken` and `userId` with the obtained `authCode`.\n\n### Call the server OpenAPI\n\nAfter obtaining the `accessToken`, developers can continue to use the access token to call other authorization interfaces. Pay attention to the permission scope and validity period of the token.\n\n## API List\n\n|     |     |\n| --- | --- |\n| **JSAPI** | **Description** |\n| [my.getAuthCode](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_getauthcode) | Gets user's authorization code. |\n| **OpenAPI** | **Description** |\n| [v1/authorizations/applyToken](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/qfd7r1) | Obtain the access token. |\n\n## FAQs\n\n**1\\. Why should developers use** `my.getAuthCode` **API?**\n\nAll the reading and writing of user information on the Mini Program Platform can only be used after obtaining the user's consent. User authorization is based on the industry standard OAuth2.0 authorization mechanism. With this mechanism, developers can obtain user information on the Mini Program Platform.\n\n**2\\. Why is the user authorization API not allowed on the first screen of the mini program?**\n\nIn order to create a better user experience on the mini program, user authorization guidance is not allowed on the first screen of the mini program. The guidance for user authorization should be given after the user fully understands the business content of the mini program. We recommend you add the mini program authorization into the business process.\n\n**3\\. Can** `userId` **be obtained through the user authorization API?**\n\nNo, the `userId` needs to be obtained by calling the related API on the server side.\n\n## More information\n\n[Obtain basic user information](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_obtainbasicmemberinformation)",
  "date": "2022-07-07",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_userauthorization",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_api_openapi_userauthorization.json"
}