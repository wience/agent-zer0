{
  "title": "Overview",
  "content": "# Overview\n\n2022-07-03 18:44\n\n## API\n\nThe framework provides the developers with more JSAPI and OpenAPI capabilities so that they can launch diversified convenient services to the users.\n\n### Notes:\n\nThe APIs started with my.on are used to listen to the system events and accept one callback function as Â the parameter. When the event is triggered, it calls the callback function, which will transfer to the related API started with my.off to cancel the listening relation. If the API started with my.off is called directly, all listening relations will be canceled. Example\n\ncopy\n\n```javascript\nPage({\n  onLoad() {\n    this.callback = this.callback.bind(this);\n    my.onBLECharacteristicValueChange(this.callback);\n  },\n  onUnload() {\n    // remove listener when page unload\n    my.offBLECharacteristicValueChange(this.callback);\n  },\n  callback(res) {\n    console.log(res);\n  },\n});\n```\n\nAll other API interfaces accept one object as the parameter. It is possible to specify success (call success), fail (call failure) and complete (call success or failure) cto receive the interface call result. The callback result is generally an object unless otherwise specified. If an error/errorMessage is included, it indicates call failure. The result value after the call is a promise object. Example\n\ncopy\n\n```javascript\nmy.httpRequest({\n  url: '/x.htm',\n  success(res1) {},\n}).then((res2) => {\n  // res1 === res2\n},(res) => {\n  console.log(res.error, res.errorMessage);\n})\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_overview",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_api_overview.json"
}