{
  "title": "map",
  "content": "# map\n\n2022-07-07 17:08\n\nThis topic introduces the map components. If multiple map components are displayed on the same page, different IDs are required. The map components are the native components in the application, which have the highest level of the hierarchy. No matter what the value of `zIndex` is, the level of other components on the page cannot be higher than that of the map components.\n\n**Related API：** [my.createMapContext(mapId)](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_map_createmapcontext)\n\n# Prerequisites\n\n- Currently the map components support the Google Maps only.\n- Do not use the map components in [scroll-view](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_view-container_scroll-view).\n- The map components do not support CSS animation.\n- If the user zooms in or zooms out the map, reset the value of `scale` in the `onRegionChange` function before setting the latitude and longitude of the location. Otherwise, the map restores to the original size. See sample codes of `regionchange` for details.\n- The mini program does not support obtaining the latitude and longitude of the current map.\n\n# Sample codes\n\ncopy\n\n```xml\n<view>\n <map id=\"map\" longitude=\"103.855457\" latitude=\"1.339712\" scale=\"{{scale}}\" controls=\"{{controls}}\"\n onControlTap=\"controltap\" markers=\"{{markers}}\"\n onMarkerTap=\"markertap\"\n polyline=\"{{polyline}}\"\n circles=\"{{circles}}\"\n onRegionChange=\"regionchange\"\n onTap=\"tap\"\n show-location style=\"width: 100%; height: 300px;\"\n include-points=\"{{includePoints}}\"></map>\n <button onTap=\"changeScale\">changeScale</button>\n <button onTap=\"getCenterLocation\">getCenterLocation</button>\n <button onTap=\"moveToLocation\">moveToLocation</button>\n <button onTap=\"changeCenter\">changeCenter</button>\n <button onTap=\"changeMarkers\">changeMarkers</button>\n</view>\n```\n\ncopy\n\n```javascript\nPage({\n  data: {\n    scale: 14,\n    longitude: 103.855457,\n    latitude: 1.339712,\n    markers: [{\\\n      iconPath: \"/image/green_tri.png\",\\\n      id: 10,\\\n      latitude:  1.342983,\\\n      longitude: 103.867935,\\\n      width: 50,\\\n      height: 50\\\n   },{\\\n      iconPath: \"/image/green_tri.png\",\\\n      id: 11,\\\n      latitude: 1.343573,\\\n      longitude: 103.861916,\\\n      width: 50,\\\n      height: 50,\\\n      customCallout: {\\\n        type: 1,\\\n        time: '1',\\\n     },\\\n      fixedPoint:{\\\n        originX: 400,\\\n        originY: 400,\\\n     },\\\n      iconAppendStr: 'Map icon'\\\n   }],\n    includePoints: [{\\\n      latitude: 1.347016,\\\n      longitude: 103.860167,\\\n   }],\n    polyline: [{\\\n      points: [{\\\n        longitude: 103.863218,\\\n        latitude: 1.351628\\\n     }, {\\\n        longitude: 103.862718,\\\n        latitude: 1.351428\\\n     }, {\\\n        longitude: 103.862218,\\\n        latitude: 1.350828\\\n     }, {\\\n        longitude: 103.861718,\\\n        latitude: 1.350428\\\n     }, {\\\n        longitude: 103.861018,\\\n        latitude: 1.351028\\\n     }],\\\n      color: \"#FF0000DD\",\\\n      width: 5,\\\n      dottedLine: false\\\n   }],\n    circles: [{\\\n      latitude: 1.351628,\\\n      longitude: 103.863718,\\\n      color: \"#000000AA\",\\\n      fillColor: \"#000000AA\",\\\n      radius: 80,\\\n      strokeWidth: 5,\\\n   }],\n    controls: [{\\\n      id: 5,\\\n      iconPath: '../../resources/pic/2.jpg',\\\n      position: {\\\n        left: 0,\\\n        top: 300 - 50,\\\n        width: 50,\\\n        height: 50\\\n     },\\\n      clickable: true\\\n   }]\n },\n\n onReady(e) {\n   // Use my.createMapContext to obtain the map context.\n   this.mapCtx = my.createMapContext('map')\n },\n\n getCenterLocation() {\n   this.mapCtx.getCenterLocation(function (res) {\n      console.log(res.longitude)\n      console.log(res.latitude)\n   })\n },\n\n moveToLocation() {\n   this.mapCtx.moveToLocation()\n },\n\n regionchange(e) {\n    console.log('regionchange', e);\n// Note: If the user zooms in or zooms out the map, reset the value of scale of the onRegionChange function before setting the latitude and longitude of the location. Otherwise the map restores to the original size.\nif (e.type === 'end') {\n     this.setData({\n        scale: e.scale\n     });\n   }\n },\n\n markertap(e) {\n    console.log('marker tap', e);\n },\n\n controltap(e) {\n    console.log('control tap', e);\n },\n\n tap() {\n    console.log('tap:');\n },\n\n changeScale() {\n   this.setData({\n      scale: 8,\n   });\n },\n\n changeCenter() {\n   this.setData({\n      longitude: 103.867935,\n      latitude: 1.343573,\n      includePoints: [{\\\n        latitude: 1.351028,\\\n        longitude: 103.861018,\\\n     }],\n   });\n },\n //An indicator of whether to support gesture events. When isGestureEnable is 1, gesture events are supported. Otherwise gesture events are not supported.\n gestureEnable() {\n   this.mapCtx.gestureEnable({isGestureEnable:1});\n },\n //An indicator of whether to show the compass. When isShowCompass is 1, display the compass. Otherwise the compass is not displayed.\n showsCompass() {\n   this.mapCtx.showsCompass({isShowsCompass:1});\n },\n changeMarkers() {\n   this.setData({\n      markers: [{\\\n        iconPath: \"/image/green_tri.png\",\\\n        id: 10,\\\n        latitude: 1.351028,\\\n        longitude: 103.861018,\\\n        width: 50,\\\n        height: 50\\\n     }],\n      includePoints: [{\\\n        latitude: 1.350428,\\\n        longitude: 103.861718,\\\n     }],\n   });\n },\n})\n```\n\n# Parameters\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Type** | **Description** |\n| style | String | Inline style. |\n| class | String | Style name. |\n| latitude | Number | The latitude of the central point. |\n| longitude | Number | The longitude of the central point. |\n| scale | Number | The zoom level. The value ranges from 5 to 18 and is 16 by default. |\n| markers | Array | The location marker. See [markers](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_map_map#yDIWJ) for details. |\n| polyline | Array | The polyline. See [polyline](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_map_map#TbWhl) for details. |\n| circles | Array | The circle. See [circles](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_map_map#r9jFv) for details. |\n| polygon | Array | The polygon. See [polygon](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_map_map#0XpJF) for details. |\n| show-location | Boolean | An indicator of whether to display the current location with directions. |\n| include-points | Array | The view is extended in a small scale with the passed coordinates.<br>`Example:`<br>`[{    `<br>`latitude: 1.350428,    `<br>`longitude: 103.861718,`<br>`}]` |\n| include-padding | Object | The view is displayed within the map padding.<br>`Example:`<br>`[{    `<br>`    left:0, right:0, `<br>`   top:0, bottom:0`<br>`}]` |\n| setting | Object | Settings.<br>`Example:`<br>`{\t\t`<br>`gestureEnable: 1,\t<br>`<br>`showScale: 1,\t<br>`<br>`showCompass: 1,\t<br>`<br>`tiltGesturesEnabled: 1,\t\t`<br>`trafficEnabled: 0,\t<br>`<br>`showMapText: 0,\t`<br>`logoPosition: {`<br>`centerX: 150,\t\t`<br>`centerY: 90\t`<br>`}`<br>`}` |\n| onMarkerTap | EventHandle | Call this function when clicking on Marker.<br>`Example:`<br>`{`<br>`markerId,    `<br>`latitude,    `<br>`longitude, `<br>`}` |\n| onCalloutTap | EventHandle | Call this function when clicking on the tooltip of Marker.<br>`Example:`<br>`{`<br>`markerId,    `<br>`latitude,    `<br>`longitude, `<br>`}` |\n| onControlTap | EventHandle | Call this function when clicking on control.<br>`Example:`<br>`{`<br>`controlId`<br>`}` |\n| onRegionChange | EventHandle | Call this function when the view is changed.<br>`Example:`<br>`{`<br>`type: \"begin/end\",`<br>`latitude,`<br>`longitude,`<br>`scale`<br>`}` |\n| onTap | EventHandle | Call this function when clicking on the map.<br>`Example:`<br>`{    `<br>`latitude,    `<br>`longitude, `<br>`}` |\n\n## markers\n\nThe location marker.\n\n**Notes:**\n\n- With the `markers` parameter, multiple location markers can be displayed.\n- The description of the location marker does not support English.\n\n## polygon\n\nSpecify a series of coordinates, which form a closed polygon based on the `points`.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| points | An array of the latitude and longitude.<br>`Example:`<br>`[{`<br>`latitude: 0,\t`<br>`longitude: 0`<br>`}]` | Array | Yes |\n| color | The stroke color. Use hexadecimal numbers to set colors. <br>`Example: #eeeeeeAA` | String | No |\n| fillColor | The fill color. Use hexadecimal numbers to set colors.<br>`Example: #eeeeeeAA` | String | No |\n| width | The stroke width. | Number | No |\n\n## polyline\n\nSpecify a series of coordinates, which are connected from the first item to the last item in an array.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| points | An array of the latitude and longitude. <br>`Example:`<br>`[{`<br>`latitude: 0,\t`<br>`longitude: 0`<br>`}]` | Array | Yes |\n| color | The stroke color. Use hexadecimal numbers to set colors. <br>`Example: #eeeeeeAA` | String | No |\n| width | The stroke width. | Number | No |\n| iconWidth | The icon width. | Number | No |\n| zIndex | The zIndex compared to other polys. | Number | - |\n| iconPath | Displayed icon.<br>**Note:**<br>The image path in the project directory. The path can be written as a relative path prefixed with a forward slash (/), which indicates a relative root directory of a mini program. If this parameter is specified, ignore the value of `color`. To create the multiple-color polyline, use `iconPath` and `colorList` jointly. Set the background of the icon to be transparent so that the multiple-color polyline is not covered. | String | - |\n\n## circles\n\nDisplay a circle on the map.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| latitude | The latitude. The value ranges from -90 to 90. | Float | Yes |\n| longitude | The longitude. The value ranges from -180 to 180. | Float | Yes |\n| color | The stroke color. Use hexadecimal numbers to set colors. <br>`Example: #eeeeeeAA` | String | No |\n| fillColor | The fill color. Use hexadecimal numbers to set colors. <br>`Example: #eeeeeeAA` | String | No |\n| radius | The radius in meters. | Number | Yes |\n| strokeWidth | The stroke width. | Number | No |\n\n## callout Deprecated\n\nThe customs tooltip over the location marker.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| content | The content in the tooltip, which is empty by default. | String | No |\n\n## customCallout Deprecated\n\nThe customs background of the tooltip.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| type | The style of the background. Valid values are:<br>- 0: Black background<br>- 1: White background<br>- 2:Background and text | Number | Yes |\n| time | The time. | String | Yes |\n| descList | The description array.<br>`Example:`<br>`{      `<br>`\"type\": 0,    `<br>`\"time\": \"3\",    `<br>`\"descList\": [{          `<br>`\"desc\": \"Click to take a taxi\",        `<br>`\"descColor\": \"#ffffff\"      }],    `<br>`\"isShow\": 1 `<br>`}` | Array | Yes |\n\n### fixedPoint\n\nThe fixed point based on the screen.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| originX | The number of pixels in the horizontal direction from the upper-left corner of the map. | Number | Yes |\n| originY | The number of pixels in the vertical direction from the upper-left corner of the map. | Number | Yes |\n\nThe latitude and longitude must be set for the map components. Otherwise the default coordinate is Beijing's latitude and longitude.\n\n# Location marker design\n\n## Priority\n\n- The customCallout, callout, and label are excluded with each other. The priority order is label > customCallout > callout.\n- The style and icon are excluded with each other. The priority order is:\n\n- style > iconAppendStr\n- style > icon\n\n## style\n\n|     |     |\n| --- | --- |\n| **Sample code** | **Sample legend** |\n| copy<br>```<br>{<br>    type:1,<br>    text1:\"Style1\",<br>    icon1:'xxx',<br>    icon2:'xxx'<br>}<br>``` | ![image](https://cdn.nlark.com/lark/0/2018/png/36245/1537428922033-7f44ea7c-6f28-43cc-a5d0-80cc4cf0213b.png) |\n| copy<br>```<br>{<br>    type:2,<br>    text1:\"Style2\",<br>    icon1:'xxx',<br>    icon2:'xxx'<br>}<br>``` | ![image](https://cdn.nlark.com/lark/0/2018/png/36245/1537428730637-bd21f41b-3352-4c42-a2ba-0dca4012b0e3.png) |\n| copy<br>```<br>{<br>    type:3,<br>    icon:xxx,  //Optional<br>    text:xxx,  //Mandatory<br>    color:xxx,  //#33B276 by default<br>    bgColor:xxx,  //#FFFFFF by default  <br>    gravity:\"left/center/right\", //center by default<br>    fontType:\"small/standard/large\"  //standard by default<br>}<br>``` |  |\n\n## label\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Required** | **Remark** |\n| content | Yes | - |\n| color | No | The default value is #000000. |\n| fontsize | No | The default value is 14. |\n| borderRadius | No | The default value is 20. |\n| bgColor | No | The default value is #FFFFFF. |\n| padding | No | The default value is 10. |\n\n# FAQs\n\n**How do the map components redirect the mini program to the Google Maps for the navigation?**\n\nUse the [my.openLocation](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_location_openlocation) API.\n\n**How to obtain the value of** `scale` **when the** `optimize` **property of the map components is true?**\n\nUse the `onRegionChange` function.\n\n**How to create the polygon area on the map manually?**\n\nUse the `polygon` property.\n\n**Does the text in iconAppendStr support line breaks?**\n\nNo, the text in iconAppendStr does not support line breaks.\n\n**How to modify icons of the first item and the last item in the map components after** `iconPath` **is set?**\n\nCurrently the modification is not supported.\n\n# More information\n\n[my.createMapContext](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_map_createmapcontext)\n\n[MapContext Overview](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_map_mapcontext_overview)",
  "date": "2022-07-07",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_map_map",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_component_map_map.json"
}