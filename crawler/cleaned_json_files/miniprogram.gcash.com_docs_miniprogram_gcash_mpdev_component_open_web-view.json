{
  "title": "web-view",
  "content": "# web-view\n\n2022-07-03 18:44\n\nWebview\n\n> This component does not support personal Mini Program temporarily.\n\n`<web-view/>` The component is a component that is used to carry H5 webpage and automatically bespreads the whole Mini Program page.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Type** | **Default** | **Description** |\n| src | String | No | H5 webpage URL to be rendered in web-view H5 webpage URL needs login Mini Program management background- In Mini Program details - Setting, configure H5 domain whitelist. |\n| onMessage | EventHandle | No | postMessage message from webpage to Mini Program e.detail = { data }. |\n\n> Each page can have only one . Do not render multiple . It bespreads whole page and overlaps other components.\n\n### Sample Code\n\ncopy\n\n```plaintext\n<!-- axml -->\n<!-- web-view pointing to google -->\n<web-view src=\"https://google.com/\" onMessage=\"test\"></web-view>\n```\n\n### APIs Available\n\n|     |     |     |\n| --- | --- | --- |\n| **API Type** | **Name** | **Description** |\n| Navigation | my.navigateTo | Navigate to another page of the app while keeping current one. |\n| Navigation | my.navigateBack | Close current page and return to one of the pages before. |\n| Navigation | my.switchTab | Navigate to a page on tabBar and close any other pages that are not on the tabBar. |\n| Navigation | my.reLaunch | Close all pages and navigate to a page from the app. |\n| Navigation | my.redirectTo | Close current page and navigate to a page from the app. |\n| Image | my.chooseImage | Take a photo or choose one from the album. (The file path of the obtained photo Â can be sent to the current mini program via `my.postMessage()`, and then be uploaded if needed.) |\n| Image | my.previewImage | Preview the image. |\n| Location | my.getLocation | Get location information of current user. |\n| Popups | my.alert | Show alert window. |\n| Popups | my.showLoading | Show loading indicator. |\n| Popups | my.hideLoading | Hide loading indicator. |\n| Storage | my.setStorage | Store some data in local storage with a key. Will overwrite if the key already exists. |\n| Storage | my.getStorage | Retrieve stored data. |\n| Storage | my.removeStorage | Delete stored data. |\n| Storage | my.clearStorage | Clear local storage. |\n| Storage | my.getStorageInfo | Get information about local storage asynchronously. |\n| Network | my.getNetworkType | Get information about current network status. |\n| Payment | my.tradePay | Invoke payment procedures. (Don't process payment in H5 environment, and always call this API for payments.) |\n| Message | my.postMessage | Send message to the current mini program, in JSON format. |\n| Message | my.onMessage | Listen to messages from the current mini program. |\n| Environment | my.getEnv | Get information about current environment. |\n\n### Demo Code\n\nCode for `web-view` page for H5.\n\ncopy\n\n```html\n<script type=\"text/javascript\" src=\"https://appx/web-view.min.js\"></script>\n<script>\n  my.navigateTo({url: '../get-user-info/get-user-info'});\n\n  // Send message to Mini Program.\n  my.postMessage({name:\"test web-view\"});\n\n  // Did receive message from Mini Program.\n  my.onMessage = function(e) {\n    console.log(e); // {'sendToWebView': '1'}\n  }\n  // Check if is run in Mini Program environment\n  my.getEnv(function(res) {\n    console.log(res.miniprogram) // true\n  });\n</script>\n```\n\nAfter `my.postMessage` is called, `onMessage` will be executed in this mini program page.\n\ncopy\n\n```html\n<!-- .axml -->\n<view>\n  <web-view id=\"web-view-1\" src=\"...\" onMessage=\"test\"></web-view>\n</view>\n```\n\ncopy\n\n```javascript\n// A 'test' method is declared in this page.\n// As web-view in page.axml has set 'test' for the call of 'onMessage',\n// after my.postMessage is executed in the web-view, test will be called.\nPage({\n  onLoad(e){\n    this.webViewContext = my.createWebViewContext('web-view-1');\n  },\n  test(e){\n    my.alert({\n      content:JSON.stringify(e.detail),\n    });\n    this.webViewContext.postMessage({'sendToWebView': '1'});\n  },\n});\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_open_web-view",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_component_open_web-view.json"
}