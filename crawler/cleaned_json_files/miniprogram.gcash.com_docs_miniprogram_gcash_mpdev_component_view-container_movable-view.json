{
  "title": "movable-view",
  "content": "# movable-view\n\n2022-07-03 18:44\n\nmovable-view can be dragged and slid in the page. The movable-view component must be in the [movable-area](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_view-container_movable-area) component and must be a direct child node. Otherwise, the component can't move.\n\n**Notes:**\n\n- movable-view must set the width and height properties. Otherwise, the default value 10px is used.\n\n- By default, movable-view uses absolute positioning, which can't be changed. The values of the top and left properties are 0 px.\n\n- When movable-view is smaller than movable-area, the moving range of movable-view is within the movable-area. When movable-view is larger than movable-area, the moving range of movable-view must cover the movable-area. The x-axis direction and the y-axis direction are separately considered.\n\n## Sample Code\n\n**index.axml**\n\ncopy\n\n```html\n<!-- API-DEMO page/component/movable-view.axml -->\n<view class=\"page\">\n  <view class=\"page-description\">movable-view</view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">movable-view is less than movable-area</view>\n    <view class=\"page-section-demo\">\n      <movable-area>\n        <movable-view x=\"{{x}}\" y=\"{{y}}\" direction=\"all\">movable-view</movable-view>\n      </movable-area>\n    </view>\n    <button style=\"margin-left: 10px; margin-right: 10px;\" type=\"primary\" onTap=\"onButtonTap\">Click Me to Move to (30px, 30px)</button>\n  </view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">movable-view is greater than movable-area</view>\n    <view class=\"page-section-demo\">\n      <movable-area>\n        <movable-view class=\"max\" direction=\"all\">movable-view</movable-view>\n      </movable-area>\n    </view>\n  </view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">Can only be moved laterally</view>\n    <view class=\"page-section-demo\">\n     <movable-area>\n        <movable-view direction=\"horizontal\">\n          movable-view\n        </movable-view>\n      </movable-area>\n    </view>\n  </view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">Can only be moved vertically</view>\n    <view class=\"page-section-demo\">\n     <movable-area>\n        <movable-view direction=\"vertical\">\n          movable-view\n        </movable-view>\n      </movable-area>\n    </view>\n  </view>\n</view>\n```\n\n**index.js**\n\ncopy\n\n```javascript\n// API-DEMO page/component/movable-view.js\nPage({\n  data: {\n    x: 0,\n    y: 0,\n  },\n  onButtonTap() {\n    const { x, y } = this.data;\n    if (x === 30) {\n      this.setData({\n        x: x + 1,\n        y: y + 1,\n      });\n    } else {\n      this.setData({\n        x: 30,\n        y: 30\n      });\n    }\n  },\n});\n```\n\n**index.json**\n\ncopy\n\n```json\n// API-DEMO page/component/movable-view.json\n{\n  \"allowsBounceVertical\": \"NO\"\n}\n```\n\n**index.acss**\n\ncopy\n\n```css\n/* API-DEMO page/component/movable-view.acss */\nmovable-area {\n  height: 400rpx;\n  width: 400rpx;\n  margin: 50rpx 0rpx 0 50rpx;\n  background-color: #ccc;\n  overflow: hidden;\n}\n\nmovable-view {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200rpx;\n  width: 200rpx;\n  background: #108ee9;\n  color: #fff;\n}\n\n.max {\n  width: 600rpx;\n  height: 600rpx;\n}\n```\n\n## Parameters\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Type** | **Default** | **Description** |\n| direction | String | none | The moving direction of movable-view. Valid values are \"all\", \"vertical\", \"horizontal\", and \"none\". |\n| inertia | Boolean | false | This field specifies whether movable-view has inertia. |\n| out-of-bounds | Boolean | false | This field specifies whether movable-view can move after the view container is out of the movable area. |\n| x | Number | 0 | This field defines the offset in the direction of the x axis, which is converted to the left property of the component. If the value of x is not within the movable range, the component is automatically moved to the movable range. |\n| y | Number | 0 | This field defines Â the offset in the direction of the Y-axis, which is direction is converted to the top property. If the value of Y is not within the movable range, it will be automatically moved to the movable range. |\n| damping | Number | 20 | The damping coefficient, which is used to control the animation triggered when the value of x or y changes and the animation that is pulled back when the component exceeds the range. A higher value leads to faster movement. |\n| friction | Number | 2 | The friction coefficient, which is used to control the animation that moves due to inertia. A higher value leads to higher friction and indicates that the movement stops earlier. Must be greater than **0**. Otherwise the default value is used. |\n| disabled | Boolean | false | This field specifies whether to disable the component. |\n| scale | Boolean | false | This field specifies whether to support two-finger scaling. The effective area for scaling gestures falls within the movable-view by default. |\n| scale-min | Number | 0.5 | The minimum value of the scaling level. |\n| scale-max | Number | 10 | The maximum value of the scaling level. |\n| scale-value | Number | 1 | The scale level. Can range from 0.5 to 10. |\n| animation | Boolean | false | This field specifies whether to use animations. |\n| onTouchStart | EventHandle | - | Finger touch starts and this event is passed to the parent node. |\n| catchTouchStart | EventHandle | - | Finger touch starts and this event only acts on the component and is not passed to the parent node. |\n| onTouchMove | EventHandle | - | Finger moves after touch, the event is passed to the parent node. |\n| catchTouchMove | EventHandle | - | Finger moves after touch, the event only acts on the component and is not passed to the parent node. |\n| onTouchEnd | EventHandle | - | The touch action ends, the event is passed to the parent node. |\n| catchTouchEnd | EventHandle | - | The touch action ends, the event only acts on the component and is not passed to the parent node. |\n| onTouchCancel | EventHandle | - | The touch action is interrupted, such as call reminding and popups. |\n| onChange | EventHandle | - | The event triggered during dragging, `event. detail = {x: x, y: y, source: touch}`, where `source` shows the reason of the movement, for example, the value is `touch`. |\n| onChangeEnd | EventHandle | - | The event triggered after dragging, `event.detail = {x: x, y: y}`. |\n| onScale | EventHandle | - | The event triggered during zooming, `event.detail = {x, y, scale`}. |\n\n### onChange return value detail.source\n\nThe source field shows the reason of the movement.\n\n|     |     |\n| --- | --- |\n| **Value** | **Description** |\n| touch | Dragging. |\n| touch-out-of-bounds | The movable range is exceeded. |\n| out-of-bounds | Pullback after the movable range is exceeded. |\n| friction | Inertia. |\n| Empty string | `setData`. |\n\n**Instruction:** Please check the **event type** in the [event introduction](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_event-system_event-introduction) for bubbling event.",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_view-container_movable-view",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_component_view-container_movable-view.json"
}