{
  "title": "scroll-view",
  "content": "# scroll-view\n\n2022-07-03 18:44\n\nScroll view region\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Type** | **Default** | **Description** |\n| class | String |  | External style name. |\n| style | String |  | Inline style name. |\n| scroll-x | Boolean | false | Allow horizontal scroll. |\n| scroll-y | Boolean | false | Allow vertical scroll. |\n| upper-threshold | Number | 50 | How far it is to top/left (in px) to trigger the scrolltoupper event. |\n| lower-threshold | Number | 50 | How far it is to bottom/right (in px) to trigger the scrolltolower event. |\n| scroll-top | Number |  | Set location of virtical scroll bar. |\n| scroll-left | Number |  | Set location of horizontal scroll bar. |\n| scroll-into-view | String |  | Value is an element ID, scrolling to that element, element top aligning with scroll region top. |\n| onScrollToUpper | EventHandle |  | Scroll to top/left triggers the scrolltoupper event. |\n| onScrollToLower | EventHandle |  | Scroll to bottom/right triggers the scrolltolower event. |\n| onScroll | EventHandle |  | Trigger on scroll, event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth}. |\n\n> When vertical scroll is used, a fixed height is required, which is set by using acss.\n\n### Sample Code\n\ncopy\n\n```plaintext\n<view class=\"page\">\n  <view class=\"page-description\">Scroll view region</view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">vertical scroll</view>\n    <view class=\"page-section-demo\">\n      <scroll-view scroll-y=\"{{true}}\" style=\"height: 200px;\" onScrollToUpper=\"upper\" onScrollToLower=\"lower\" onScroll=\"scroll\" scroll-into-view=\"{{toView}}\" scroll-top=\"{{scrollTop}}\">\n        <view id=\"blue\" class=\"scroll-view-item bc_blue\"></view>\n        <view id=\"red\"  class=\"scroll-view-item bc_red\"></view>\n        <view id=\"yellow\" class=\"scroll-view-item bc_yellow\"></view>\n        <view id=\"green\" class=\"scroll-view-item bc_green\"></view>\n      </scroll-view>\n    </view>\n    <view class=\"page-section-btns\">\n      <view onTap=\"tap\">next</view>\n      <view onTap=\"tapMove\">move</view>\n      <view onTap=\"scrollToTop\">scrollToTop</view>\n    </view>\n  </view>\n  <view class=\"page-section\">\n    <view class=\"page-section-title\">horizontal scroll</view>\n    <view class=\"page-section-demo\">\n      <scroll-view class=\"scroll-view_H\" scroll-x=\"{{true}}\" style=\"width: 100%\" >\n        <view id=\"blue2\" class=\"scroll-view-item_H bc_blue\"></view>\n        <view id=\"red2\"  class=\"scroll-view-item_H bc_red\"></view>\n        <view id=\"yellow2\" class=\"scroll-view-item_H bc_yellow\"></view>\n        <view id=\"green2\" class=\"scroll-view-item_H bc_green\"></view>\n      </scroll-view>\n    </view>\n  </view>\n</view>\n```\n\ncopy\n\n```plaintext\nconst order = ['blue', 'red', 'green', 'yellow'];\nPage({\n  data: {\n    toView: 'red',\n    scrollTop: 100,\n  },\n  upper(e) {\n    console.log(e);\n  },\n  lower(e) {\n    console.log(e);\n  },\n  scroll(e) {\n    console.log(e.detail.scrollTop);\n  },\n  scrollToTop(e) {\n    console.log(e);\n    this.setData({\n      scrollTop: 0,\n    });\n  },\n});\n```\n\n## Tips\n\n- scroll-into-view has a higher priority than scroll-top\n\n- Prevent page kickback in scroll scroll-view, so the scroll in scroll-view will not trigger onPullDownRefresh",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/component_view-container_scroll-view",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_component_view-container_scroll-view.json"
}