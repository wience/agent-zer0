{
  "title": "Button",
  "content": "# Button\n\n2022-07-03 18:44\n\nYou can use the button component to allow users to perform actions or make choices. The component is often used to submit forms, redirect users to another interface, or guide users to next steps. The usage is consistent with the [basic](https://miniprogram.alipay.com/docs/miniprogram/mpdev/component_form-component_button) button component, but more styles are added in the extended button component.\n\n## Sample code\n\nSee the sample codes in different languages:\n\n### .json\n\ncopy\n\n```json\n{\n \"defaultTitle\": \"Button\",\n \"usingComponents\": {\n   \"button\": \"mini-ali-ui/es/button/index\",\n   \"radio\": \"mini-ali-ui/es/am-radio/index\",\n   \"checkbox\": \"mini-ali-ui/es/am-checkbox/index\"\n }\n}\n\n```\n\n### .axml\n\ncopy\n\n```xml\n<view class=\"container\">\n <button onTap=\"onTest\" showLoading=\"{{showLoading}}\" dataName=\"{{dataName}}\" type=\"{{type}}\" subtitle=\"{{subtitle}}\" disabled=\"{{disabled}}\" shape=\"{{shape}}\" capsuleSize=\"{{capsuleSize}}\" capsuleMinWidth=\"{{capsuleMinWidth}}\">\n   {{title}}\n </button>\n <view>main title</view>\n <input value=\"{{title}}\" onInput=\"titleChange\"/>\n <view>subtitle</view>\n <input value=\"{{subtitle}}\" onInput=\"subtitleChange\"/>\n <view>button type</view>\n <radio-group class=\"radio-group\" onChange=\"typeChange\" name=\"type\">\n   <label class=\"radio\" a:for=\"{{types}}\" key=\"label-{{index}}\">\n     <radio value=\"{{item.name}}\" checked=\"{{item.checked}}\" />\n     <text class=\"radio-text\">{{item.value}}</text>\n   </label>\n </radio-group>\n <view>shape</view>\n <radio-group class=\"radio-group\" onChange=\"shapeChange\" name=\"shape\">\n   <label class=\"radio\" a:for=\"{{shapes}}\" key=\"label-{{index}}\">\n     <radio value=\"{{item.name}}\" checked=\"{{item.checked}}\" />\n     <text class=\"radio-text\">{{item.value}}</text>\n   </label>\n </radio-group>\n <view>capsule button size</view>\n <radio-group class=\"radio-group\" onChange=\"sizeChange\" name=\"size\">\n   <label class=\"radio\" a:for=\"{{capsuleSizes}}\" key=\"label-{{index}}\">\n     <radio value=\"{{item.name}}\" checked=\"{{item.checked}}\" />\n     <text class=\"radio-text\">{{item.value}}</text>\n   </label>\n </radio-group>\n <view>disable or not</view>\n <checkbox onChange='onDisableChange'/>\n <view>Enable minimum width of capsule button or not</view>\n <checkbox onChange='onMinWidthChange'/>\n <view>achieve loading or not</view>\n <checkbox onChange='onLoadingChange'/>\n</view>\n\n```\n\n### .acss\n\ncopy\n\n```css\n.container {\n  padding: 20rpx;\n}\n\n.container button {\n  margin-bottom: 24rpx;\n}\n\n```\n\n### .js\n\ncopy\n\n```javascript\nPage({\n  data: {\n    title: 'push-button control Normal',\n    subtitle: '',\n    disabled: false,\n    dataName: '1',\n    type: '',\n    shape: 'default',\n    capsuleSize: 'medium',\n    capsuleMinWidth: false,\n    showLoading: false,\n    types: [\\\n      { name: 'default', value: 'default', checked: true },\\\n      { name: 'primary', value: 'primary' },\\\n      { name: 'ghost', value: 'ghost' },\\\n      { name: 'text', value: 'text' },\\\n      { name: 'warn', value: 'warn' },\\\n      { name: 'warn-ghost', value: 'warn-ghost' },\\\n      { name: 'light', value: 'light' },\\\n    ],\n    shapes: [\\\n      { name: 'default', value: 'default', checked: true },\\\n      { name: 'capsule', value: 'capsule' },\\\n    ],\n    capsuleSizes: [\\\n      { name: 'small', value: 'small' },\\\n      { name: 'medium', value: 'medium', checked: true },\\\n      { name: 'large', value: 'large' },\\\n    ],\n  },\n  onLoad() {\n  },\n  typeChange(e) {\n    this.setData({\n      type: e.detail.value,\n    });\n  },\n  shapeChange(e) {\n    this.setData({\n      shape: e.detail.value,\n    });\n  },\n  sizeChange(e) {\n    this.setData({\n      capsuleSize: e.detail.value,\n    });\n  },\n  titleChange(e) {\n    this.setData({\n      title: e.detail.value,\n    });\n  },\n  subtitleChange(e) {\n    this.setData({\n      subtitle: e.detail.value,\n    });\n  },\n  onDisableChange(e) {\n    this.setData({\n      disabled: e.detail.value,\n    });\n  },\n  onMinWidthChange(e) {\n    this.setData({\n      capsuleMinWidth: e.detail.value,\n    });\n  },\n  onTap() {\n    // e.target.dataset.name\n  },\n  onLoadingChange(e) {\n    this.setData({\n      showLoading: e.detail.value,\n    });\n  },\n});\n\n```\n\n## Parameters\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Type** | **Description** |\n| type | String | Button style. Valid values are:<br>- `default`<br>- `primary`<br>- `ghost`<br>- `warn`<br>- `warn-ghost`<br>- `text`<br>- `light`<br>The default value is `default`. |\n| subtitle | String | Subtitle. |\n| shape | String | Button shape. Valid values are:<br>- `default`<br>- `capsule`<br>The default value is `default`. |\n| capsuleSize | String | Capsule button size. Valid values are:<br>- `large`<br>- `medium`<br>- `small`<br>The default value is `medium`. |\n| capsuleMinWidth | Boolean | An indicator of whether to use the minimum width for the capsule button. The default value is `false`. |\n| disabled | Boolean | An indicator of whether to disable the button. The default value is `false`. |\n| showLoading | Boolean | An indicator of whether to display the loading icon on the button. The default value is `false`. |\n| hover-class | String | Style class after the button is pressed. The default class name is `button-hover` and the style is `{background-color: rgba(0, 0, 0, 0.1); opacity: 0.7;}`. If the value is `none`, no style changes occur when users press the button. |\n| hover-start-time | Number | The duration in milliseconds between two moments. One moment is the time when users tap the button and the other is the time when the button changes to the tapped status. The default value is `20`. |\n| hover-stay-time | Number | The duration in milliseconds that the tapped status lasts after users tap the button. The default value is `70`. |\n| hover-stop-propagation | Boolean | An indicator of whether to prevent the tapped status from the parent element of the current element. The default value is `false`. |\n| form-type | String | The button type that is used in the [form](https://miniprogram.alipay.com/docs/miniprogram/mpdev/component_form-component_form) component. Valid values are:<br>- `submit`<br>- `reset`<br>When users tap the button, the `onSubmit` event or the `onReset` event is triggered. |\n| open-type | String | Open capability, such as the payment capability. |\n| scope | String | Authorization scope, which is valid when the value of _open-type_ is `getAuthorize`. |\n| onTap | EventHandle | The event that is triggered when users tap the button. |\n| app-parameter | String | Parameters that are transmitted to the opened app, which are valid when the value of _open-type_ is `launchApp`. |\n\n九色鹿",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_form_button",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_form_button.json"
}