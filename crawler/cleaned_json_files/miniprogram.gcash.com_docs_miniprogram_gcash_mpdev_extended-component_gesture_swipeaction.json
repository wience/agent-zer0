{
  "title": "SwipeAction",
  "content": "# SwipeAction\n\n2022-07-03 18:44\n\nSliding cell\n\n## Sample Code\n\ncopy\n\n```json\n\t// API-DEMO page/component/swiper-action/swiper-action.json\n\t{\n\t  \"defaultTitle\": \"SwipeAction\",\n\t  \"usingComponents\": {\n\t    \"list\": \"mini-antui/es/list/index\",\n\t    \"list-item\": \"mini-antui/es/list/list-item/index\",\n\t    \"swipe-action\": \"mini-antui/es/swipe-action/index\"\n\t  }\n\t}\n```\n\ncopy\n\n```html\n\t<!-- API-DEMO page/component/swiper-action/swiper-action.axml -->\n\t<view>\n\t  <list>\n\t    <view a:for=\"{{list}}\" key=\"{{item.content}}\">\n\t      <swipe-action\n\t        index=\"{{index}}\"\n\t        restore=\"{{swipeIndex === null || swipeIndex !== index}}\"\n\t        right=\"{{item.right}}\"\n\t        onRightItemClick=\"onRightItemClick\"\n\t        onSwipeStart=\"onSwipeStart\"\n\t        extra=\"item{{index}}\"\n\t      >\n\t        <list-item\n\t          arrow=\"horizontal\"\n\t          index=\"{{index}}\"\n\t          key=\"items-{{index}}\"\n\t          onClick=\"onItemClick\"\n\t          last=\"{{index === list.length - 1}}\"\n\t        >\n\t          {{item.content}}\n\t        </list-item>\n\t      </swipe-action>\n\t    </view>\n\t  </list>\n\t</view>\n```\n\ncopy\n\n```javascript\n\t// API-DEMO page/component/swiper-action/swiper-action.js\n\tPage({\n\t  data: {\n\t    swipeIndex: null,\n\t    list: [\\\n\t      { right: [{ type: 'edit', text: ' Unfavorite ', bgColor: '#ccc', fColor: '#f00' }, { type: 'delete', text: ' Delete ', bgColor: '#0ff', fColor: '#333' }], content: ' Text & background color change at the same time Execute swipe deletion recovery ' },\\\n\t      { right: [{ type: 'delete', text: ' Delete ' }], content: 'AAA' },\\\n\t      { right: [{ type: 'edit', text: ' Unfavorite ' }, { type: 'delete', text: ' Delete ' }], content: 'BBB' },\\\n\t      { right: [{ type: 'delete', text: ' Delete ' }], content: 'CCC' },\\\n\t    ],\n\t  },\n\t  onRightItemClick(e) {\n\t    const { type } = e.detail;\n\t    my.confirm({\n\t      title: 'Tips',\n\t      content: `${e.index}-${e.extra}-${JSON.stringify(e.detail)}`,\n\t      confirmButtonText: 'Confirm',\n\t      cancelButtonText: 'Cancel',\n\t      success: (result) => {\n\t        const { list } = this.data;\n\t        if (result.confirm) {\n\t          if (type === 'delete') {\n\t            list.splice(this.data.swipeIndex, 1);\n\t            this.setData({\n\t              list: [...list],\n\t            });\n\t          }\n\n\t          my.showToast({\n\t            content: 'Confirm => Execute swipe deletion recovery ',\n\t          });\n\t          e.done();\n\t        } else {\n\t          my.showToast({\n\t            content: 'Cancel => Swipe deletion status remains unchanged ',\n\t          });\n\t        }\n\t      },\n\t    });\n\t  },\n\t  onItemClick(e) {\n\t    my.alert({\n\t      content: `dada${e.index}`,\n\t    });\n\t  },\n\t  onSwipeStart(e) {\n\t    this.setData({\n\t      swipeIndex: e.index,\n\t    });\n\t  },\n\t});\n```\n\n## Attributes\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Default** |\n| className | Customized class. | String | - |\n| right | Sliding option, at most two options. | Array\\[Object{type: edit/delete, text: string, fColor: 'Color value', bgColor: 'Color value'}\\] | \\[\\] |\n| onRightItemClick | Click sliding option. | ({index, detail, extra, done}) => void | Call done to fold swipeAction |\n| restore | Restore the component to its initial status. When there are multiple swipeAction components, to slide one of them, it is required to set the restore attribute of the others as true, which prevents multiple swipeAction becomes active on the same page. | Boolean | false |\n| onSwipeStart | Start sliding callback. | (e: Object) => void | - |\n| extra | Extra information, to get in the onRightItemClick callback. | any | - |",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_gesture_swipeaction",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_gesture_swipeaction.json"
}