{
  "title": "List",
  "content": "# List\n\n2022-07-03 18:44\n\nList\n\n## List\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Description** | **Type** |\n| className | Custom class. | String |\n\n### Slots\n\n|     |     |\n| --- | --- |\n| **slotName** | **Description** |\n| header | Optional, list header. |\n| footer | Optional, used to render list footer. |\n\n## List-item\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Default** |\n| className | Custom class. | String |  |\n| thumb | Thumbnail, picture address. | String |  |\n| arrow | With arrow or not. | Boolean | false |\n| align | Vertical alignment of sub-elements, choices: `top`, `middle`, `bottom` | String | middle |\n| index | Unique index of list item. | String |  |\n| onClick | Call this function when clicking list-item. | ({index, target}) => void |  |\n| last | If it is the last list item. | Boolean | false |\n| disabled | Not clickable, no hover effect. | Boolean | false |\n| multipleLine | Multiple lines. | Boolean | false |\n| wrap | Wrap or not. By default, Â  excessive text length is hidden. | Boolean | false |\n\n### Slots\n\n|     |     |\n| --- | --- |\n| **slotname** | **Description** |\n| extra | Optional, used to render right-hand notes of list item. |\n| prefix | Optional, used to render left-hand notes of list item. |\n\n## Example\n\ncopy\n\n```json\n{\n  \"defaultTitle\": \"AntUI Component Library\",\n  \"usingComponents\": {\n    \"list\": \"mini-antui/es/list/index\",\n    \"list-item\": \"mini-antui/es/list/list-item/index\"\n  }\n}\n```\n\ncopy\n\n```html\n<view>\n  <list>\n    <view slot=\"header\">\n      List Header\n    </view>\n    <block a:for=\"{{items}}\">\n      <list-item\n        thumb=\"{{item.thumb}}\"\n        arrow=\"{{item.arrow}}\"\n        align=\"{{item.align}}\"\n        index=\"{{index}}\"\n        onClick=\"onItemClick\"\n        key=\"items-{{index}}\"\n        last=\"{{index === (items.length - 1)}}\"\n      >\n      {{item.title}}\n        <view class=\"am-list-brief\">{{item.brief}}</view>\n        <view slot=\"extra\">\n          {{item.extra}}\n        </view>\n      </list-item>\n    </block>\n    <view slot=\"footer\">\n      List footer\n    </view>\n  </list>\n  <list>\n    <view slot=\"header\">\n      List Header\n    </view>\n    <block a:for=\"{{items2}}\">\n      <list-item\n        thumb=\"{{item.thumb}}\"\n        arrow=\"{{item.arrow}}\"\n        onClick=\"onItemClick\"\n        index=\"items2-{{index}}\"\n        key=\"items2-{{index}}\"\n        last=\"{{index === (items2.length - 1)}}\"\n      >\n       {{item.title}}\n        <view class=\"am-list-brief\">{{item.brief}}</view>\n        <view a:if=\"{{item.extra}}\" slot=\"extra\">\n          {{item.extra}}\n        </view>\n      </list-item>\n    </block>\n    <view slot=\"footer\">\n      List footer\n    </view>\n  </list>\n</view>\n```\n\ncopy\n\n```javascript\nPage({\n  data: {\n    items: [\\\n      {\\\n        title: 'Simple List',\\\n        extra: 'Details',\\\n      },\\\n    ],\n    items2: [\\\n      {\\\n        title: 'Complex List',\\\n        arrow: true,\\\n      },\\\n      {\\\n        title: 'Complex List',\\\n        arrow: 'up',\\\n      },\\\n      {\\\n        title: 'Complex List',\\\n        arrow: 'down',\\\n      },\\\n      {\\\n        title: 'Complex List',\\\n        arrow: 'empty',\\\n      },\\\n      {\\\n        title: 'Complex List',\\\n      },\\\n    ],\n  },\n  onItemClick(ev) {\n    my.alert({\n      content: `Click the ${ev.index} row`,\n    });\n  },\n});\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_layout-navigation_list",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_layout-navigation_list.json"
}