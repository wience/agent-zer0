{
  "title": "Tabs",
  "content": "# Tabs\n\n2022-07-03 18:44\n\nTabs allow the user to switch between different views.\n\n## Tabs\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Type** | **Default** | **Required** | **Description** |\n| className | String |  | No | Customized class. |\n| activeCls | String |  |  | Customized class for activating tabbar. |\n| tabs | Array |  | Yes | tab data, including the tab `title`. The badge type `badgeType` includes `dot` and `text`, and is not displayed if the `badgeType` is not set. Badge text `badgeText` takes effect when the `badgeType` is `text`. |\n| activeTab | Number |  | Yes | Index of the currently active tab. |\n| showPlus | Boolean | false | No | Show the “+” icon or not. |\n| onPlusClick | () =\\> {} |  | No | Callback when the “+” icon is clicked. |\n| onTabClick | (index: Number) => void |  | No | Callback when the tab is clicked. |\n| onChange | (index: Number) => void |  | No | Triggered when tab changes. |\n| swipeable | Boolean | true | No | If it is possible to switch contents by swiping. |\n| duration | Number | 500(ms) | No | Duration of wiping animation in ms,   when the swipeable is true. |\n| tabBarBackgroundColor | String |  | No | tabBar background color. |\n| tabBarActiveTextColor | String |  | No | Active Tab text color of the tabBar. |\n| tabBarInactiveTextColor | String |  | No | Inactive Tab text color of the tabBar. |\n| tabBarUnderlineColor | String |  | No | tabBar underline color. |\n| tabBarCls | String |  | No | tabBar custom style class. |\n\n## Tab-content\n\nView content\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Description** | **Type** |\n| index | Unique index of list item. | String |\n\n## Example\n\ncopy\n\n```json\n{\n  \"defaultTitle\": \"AntUI Component Library\",\n  \"usingComponents\": {\n    \"tabs\": \"mini-antui/es/tabs/index\",\n    \"tab-content\": \"mini-antui/es/tabs/tab-content/index\"\n  }\n}\n```\n\ncopy\n\n```html\n<view>\n  <tabs\n    tabs=\"{{tabs}}\"\n    showPlus=\"{{true}}\"\n    onTabClick=\"handleTabClick\"\n    onChange=\"handleTabChange\"\n    onPlusClick=\"handlePlusClick\"\n    activeTab=\"{{activeTab}}\"\n  >\n    <block a:for=\"{{tabs}}\">\n      <tab-content key=\"{{index}}\">\n        <view class=\"tab-content\">content of {{item.title}}</view>\n      </tab-content>\n    </block>\n  </tabs>\n</view>\n```\n\ncopy\n\n```javascript\nPage({\n  data: {\n    tabs: [\\\n      {\\\n        title: 'Option',\\\n        badgeType: 'text',\\\n        badgeText: '6',\\\n      },\\\n      {\\\n        title: 'Option two',\\\n        badgeType: 'dot',\\\n      },\\\n      { title: '3 Tab' },\\\n      { title: '4 Tab' },\\\n      { title: '5 Tab' },\\\n    ],\n    activeTab: 2,\n  },\n  handleTabClick({ index }) {\n    this.setData({\n      activeTab: index,\n    });\n  },\n  handleTabChange({ index }) {\n    this.setData({\n      activeTab: index,\n    });\n  },\n  handlePlusClick() {\n    my.alert({\n      content: 'plus clicked',\n    });\n  },\n});\n```\n\ncopy\n\n```css\n.tab-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 300px;\n}\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_layout-navigation_tabs",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_layout-navigation_tabs.json"
}