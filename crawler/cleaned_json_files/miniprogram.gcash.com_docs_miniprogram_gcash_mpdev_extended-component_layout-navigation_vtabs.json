{
  "title": "VTabs",
  "content": "# VTabs\n\n2022-07-03 18:44\n\nTabs allow the user to switch between different views.\n\n## Vtabs\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| activeTab | Index of the currently active tab. | Number | Yes |\n| tabs | tab data, including the tab `title`, unique list anchor value, as well as the Â  badge type `badgeType`, which includes `dot` and `text`, and is not displayed if the `badgeType` is not set. Badge text `badgeText` takes effect when the `badgeType` is `text`. | Array | Yes |\n| swipeable | An indicator of whether the tab can be swiped or not. | Boolean | Yes |\n| tabBarActiveBgColor | tabBar background color in active status. | String | No |\n| tabBarInactiveBgColor | tabBar background color in inactive status. | String | No |\n| tabBarActiveTextColor | Active Tab text color of the tabBar. | String | No |\n| tabBarInactiveTextColor | Inactive Tab text color of the tabBar. | String | No |\n| tabBarlineColor | tabBar sideline color. | String | No |\n| onTabClick | Callback when the tab is clicked. | (index: Number) => void | No |\n| onChange | Trigger on vtab-content change. | (index: Number) => void | No |\n\n## Vtab-content\n\nView content\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Description** | **Type** | **Required** |\n| anchor | Unique anchor value of list. | String | Yes |\n\n## Example\n\ncopy\n\n```json\n{\n  \"defaultTitle\": \"AntUI Component Library\",\n  \"usingComponents\": {\n    \"vtabs\": \"mini-antui/es/vtabs/index\",\n    \"vtab-content\": \"mini-antui/es/vtabs/vtab-content/index\"\n  }\n}\n```\n\ncopy\n\n```html\n<view>\n  <vtabs\n    tabs=\"{{tabs}}\"\n    onTabClick=\"handleChange\"\n    onChange=\"onChange\"\n    activeTab=\"{{activeTab}}\"\n  >\n    <block a:for=\"{{tabs}}\">\n      <vtab-content anchor=\"{{item.anchor}}\">\n        <view style=\"border: 1px solid #eee; height: 800px; box-sizing: border-box\">\n          <text>content of {{item.title}}</text>\n        </view>\n      </vtab-content>\n    </block>\n  </vtabs>\n</view>\n```\n\ncopy\n\n```javascript\nPage({\n  data: {\n    activeTab: 2,\n    tabs: [\\\n      { title: 'Option two', anchor: 'a', badgeType: 'dot' },\\\n      { title: 'Option', anchor: 'b', badgeType: 'text', badgeText: 'New' },\\\n      { title: 'Option three', anchor: 'c' },\\\n      { title: 'Option four', anchor: 'd' },\\\n      { title: 'Option five', anchor: 'e' },\\\n      { title: 'Option six', anchor: 'f' },\\\n    ],\n  },\n  handleChange(index) {\n    this.setData({\n      activeTab: index,\n    });\n  },\n  onChange(index) {\n    console.log('onChange', index);\n    this.setData({\n      activeTab: index,\n    });\n  },\n});\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_layout-navigation_vtabs",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_layout-navigation_vtabs.json"
}