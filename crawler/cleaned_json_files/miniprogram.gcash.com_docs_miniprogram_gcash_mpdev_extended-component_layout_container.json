{
  "title": "Container",
  "content": "# Container\n\n2022-07-03 18:44\n\nYou can use the container component to make the style of all elements in the container more consistent, such as margins between elements.\n\n## Sample code\n\nSee the sample codes in different languages:\n\n### .json\n\ncopy\n\n```json\n{\n \"defaultTitle\": \"Container\",\n \"usingComponents\": {\n   \"container\": \"mini-ali-ui/es/container/index\",\n   \"title\": \"mini-ali-ui/es/title/index\"\n }\n}\n\n```\n\n### .axml\n\ncopy\n\n```xml\n<view className=\"container\">\n  <container className=\"container-item\"\n    title=\"Customized title\"\n    thumb=\"https://img.alicdn.com/tfs/TB1Go8lh9R26e4jSZFEXXbwuXXa-84-84.png\"\n    onActionTap=\"titleClick\"\n  >\n    <view slot=\"operation\" style=\"color: red;\">is slot</view>\n    <view class=\"item\">The container component's own title properties. If the icon property is not specified, you can insert a slot named operation.</view>\n  </container>\n\n  <container className=\"container-item\"\n    title=\"Title with an arrow\"\n    icon=\"arrow\"\n    thumb=\"https://img.alicdn.com/tfs/TB1Q19sTNv1gK0jSZFFXXb0sXXa-112-112.png\"\n    onActionTap=\"titleClick\"\n  >\n    <view class=\"item\">The container component's own title properties</view>\n  </container>\n\n  <container className=\"container-item\"\n    title=\"Title with a close icon\"\n    icon=\"close\"\n    thumb=\"https://img.alicdn.com/tfs/TB1Go8lh9R26e4jSZFEXXbwuXXa-84-84.png\"\n    onActionTap=\"titleClick\"\n  >\n    <view class=\"item\">The container component's own title properties</view>\n  </container>\n\n  <container className=\"container-item\"\n    title=\"Title with a more icon\"\n    icon=\"more\"\n    thumb=\"https://img.alicdn.com/tfs/TB1Q19sTNv1gK0jSZFFXXb0sXXa-112-112.png\"\n    onActionTap=\"titleClick\"\n  >\n    <view class=\"item\">The container component's own title properties</view>\n  </container>\n\n  <container className=\"container-item\"\n    title=\"Title without icon\"\n    thumb=\"https://img.alicdn.com/tfs/TB1Go8lh9R26e4jSZFEXXbwuXXa-84-84.png\"\n    onActionTap=\"titleClick\"\n  >\n    <view class=\"item\">The container component's own title properties</view>\n  </container>\n</view>\n\n<view className=\"container\">\n  <container className=\"container-item\">\n    <view class=\"item\">a1</view>\n  </container>\n  <container className=\"container-item\">\n    <view class=\"item\">b1</view>\n    <view class=\"item\">b2</view>\n  </container>\n  <container className=\"container-item\">\n    <title slot=\"header\" hasLine=\"true\" showIcon=\"true\" iconURL=\"https://example.com/mdn/miniProgram_mendian/afts/img/A*wiFYTo5I0m8AAAAAAAAAAABjAQAAAQ/original\">Title without onActionType</title>\n    <view class=\"item\">c1</view>\n    <view class=\"item\">c2</view>\n    <view class=\"item\">c3</view>\n    <view slot=\"footer\" class=\"footer\" style=\"padding-left: 12px;\">Bottom display area</view>\n  </container>\n  <container className=\"container-item\">\n    <title slot=\"header\">slide</title>\n    <swiper indicator-dots=\"{{true}}\" class=\"item\">\n      <block a:for=\"{{['#0abc80','#00b7f4']}}\">\n        <swiper-item>\n          <view style=\"background-color: {{item}};width:100%;height:300rpx;border-radius:16rpx;\"/>\n        </swiper-item>\n      </block>\n    </swiper>\n  </container>\n  <container className=\"container-item\" type=\"onewithtwo\">\n    <view class=\"grid-item\" style =\"height: 300rpx;\" slot=\"first\">first</view>\n    <view class=\"grid-item\" slot=\"second\">second</view>\n    <view class=\"grid-item\" slot=\"third\">third</view>\n  </container>\n</view>\n\n```\n\n### .js\n\ncopy\n\n```javascript\nPage({\n  data: {},\n  onLoad() {},\n  titleClick() {\n    my.alert({\n      title: 'onActionTap callback',\n      content: 'Click the operation area after the title',\n    });\n  },\n});\n\n```\n\n### .acss\n\ncopy\n\n```css\n.container {\n  background: #F5F5F5;\n  padding: 24rpx;\n  height: 100%;\n}\n\n.container-item {\n  margin-bottom: 24rpx;\n}\n\n.footer {\n  color: #333;\n  margin-top: 24rpx;\n}\n\n.item {\n  background: #eeeeee;\n  text-align: center;\n  height: 200rpx;\n  padding-top: 20rpx;\n}\n\n.grid-item {\n  background: #eeeeee;\n  text-align: center;\n}\n\n```\n\n## Parameters\n\n|     |     |     |\n| --- | --- | --- |\n| **Property** | **Type** | **Description** |\n| type | String | Layout type of container. Valid values are:<br>- `line`<br>- `onewithtwo`<br>The default value is `line`. When the value is `line`, all elements are equally divided into multiple rows or columns. |\n| className | String | Customized style name. |\n| title | String | Title name. The [title](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_layout_title) component can be used if this property is specified. |\n| thumb | String | URL of the icon in title. |\n| icon | String | Icon on the right side of title. Valid values are:<br>- `arrow`<br>- `close`<br>- `more` |\n| onActionTap | EventHandle | The event that is triggered when users tap the icon on the right of title. The default value is `() => {}`. |",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/extended-component_layout_container",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_extended-component_layout_container.json"
}