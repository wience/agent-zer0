{
  "title": "Overview",
  "content": "# Overview\n\n2022-07-03 18:44\n\nSimilar to Page, the customized components consist of four parts: axml, js, json and acss.\n\nThere are two steps to create a customized component:\n\n1. Declare the customized component in json. If it is dependent on other components, it is required to declare additionally the dependent customized components.\n\n**Sample code:**\n\ncopy\n\n```json\n{\n  \"component\": true, // mandate, the value for customized component must be true\n  \"usingComponents\": {\n    \"c1\":\"../x/index\"\n  }//Dependent component\n}\n```\n\n**Parameter details:**\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Parameter** | **Type** | **Required** | **Description** |\n| component | Boolean | Yes | Declare customized component. |\n| usingComponents | Object | No | Path of the customized component in the dependence declaration Absolute project path starts with “/”, and relative path starts with  “./” or “../” The npm path does not start with “/”. |\n\n1. Use the Component function to register the customized component. See [Component constructor](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_constructor) 。\n\n**Component parameter description:**\n\n|     |     |     |\n| --- | --- | --- |\n| **Parameter** | **Description** | **Document** |\n| onInit | Callback on creation | [Component lifecycle](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_lifecycle). |\n| deriveDataFromProps | Callback on creation and update | [Component lifecycle](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_lifecycle). |\n| data | local status | Same as Page (can be modified via setData and $spliceData). |\n| props | Attribute transferred from outside | [Component method and external attribute-props](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_method-and-attribute). |\n| methods | Customized method | [Component method and external attribute - methods](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_method-and-attribute). |\n\n**Sample code:**\n\ncopy\n\n```javascript\n// /components/customer/index.js\nComponent({\n  mixins: [], // minxin easy reuse code\n  data: { x: 1 }, // internal data of component\n  props: { y: 1 }, // Can add default to attribute transferred from outside\n  onInit() {}, // trigger on component creation, added in version 2.0.0\n  deriveDataFromProps(nextProps) {}, // trigger on component creation and before update, added in version 2.0.0\n  didMount(){}, // Lifecycle function\n  didUpdate(){},\n  didUnmount(){},\n  methods: { // customized method\n    handleTap() {\n  \t  this.setData({ x: this.data.x + 1}); // Can use setData to change internal attribute\n    },\n  },\n})\n```\n\nin addition, the customized component supports slot and can build flexible page structure. See [component template and style](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_template-and-style) .\n\n**Sample code:**\n\ncopy\n\n```html\n<!-- // /components/customer/index.axml -->\n<view>\n  <view>x: {{x}}</view>\n  <button onTap=\"handleTap\">plusOne</button>\n  <slot>\n    <view>default slot & default value</view>\n  </slot>\n</view>\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_create-custom-component_overview",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_framework_custom-component_create-custom-component_overview.json"
}