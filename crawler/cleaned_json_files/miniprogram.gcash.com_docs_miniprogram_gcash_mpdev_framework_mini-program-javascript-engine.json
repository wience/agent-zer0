{
  "title": "Mini Program Javascript Engine",
  "content": "# Mini Program Javascript Engine\n\n2022-07-03 18:44\n\n## Running Engine\n\nMini program JavaScript codes fall into logic layer script and sjs script, which run on different threads in the the same JavaScript engine. Mini Program JavaScript Engine is different on different OSs. On the iOS platform, the script runs on the JavaScriptCore provided by the operating system. On the Android platform, the script runs on the V8 engine .\n\nMini program performs the [babel](https://babeljs.io/) conversion for the codes uploaded by the developers, so that the JavaScript engine supports most of the ES6 new features. For the internal object of the ES6 extension, Mini Program does not provide polyfill on the JavaScript engine, which causes difference on the supports for different ES6 extension internal objects for the JavaScript on different platforms. the developers need to avoid using the internal objects unsupported by JavaScript engine, and can provide polyfill for the internal objects. (Polyfill means the unsupported raw API codes that are used to implement browsers or other JavaScript engines, such as [babel-polyfill](https://babeljs.io/docs/en/babel-polyfill))\n\n## Supports of Client OSs for ES6 Extension Internal Objects\n\nThe table below lists the OS supports for ES6 extension internal objects.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Object** | **iOS 9** | **iOS 10 and above** | **Android** |\n| Object.is | Support | Support | Support |\n| Object.assign | Support | Support | Support |\n| Object.keys | Support | Support | Support |\n| Object.getOwnPropertyDescriptor | Support | Support | Support |\n| Object.getOwnPropertyNames | Support | Support | Support |\n| Object.getOwnPropertySymbols | Support | Support | Support |\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **String** | **iOS 9** | **iOS 10 and above** | **Android** |\n| String.prototype.codePointAt | Support | Support | Support |\n| String.prototype.normalize | No support | Support | Support |\n| String.prototype.includes | Support | Support | Support |\n| String.prototype.startsWith | Support | Support | Support |\n| String.prototype.endsWith | Support | Support | Support |\n| String.prototype.repeat | Support | Support | Support |\n| String.fromCodePoint | Support | Support | Support |\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Array** | **iOS 9** | **iOS 10 and above** | **Android** |\n| Array.prototype.copyWithin | Support | Support | Support |\n| Array.prototype.find | Support | Support | Support |\n| Array.prototype.findIndex | Support | Support | Support |\n| Array.prototype.find | Support | Support | Support |\n| Array.prototype.entries | Support | Support | Support |\n| Array.prototype.keys | Support | Support | Support |\n| Array.prototype.values | Support | Support | No support |\n| Array.prototype.includes | Support | Support | Support |\n| Array.from | Support | Support | Support |\n| Array.of | Support | Support | Support |\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Number** | **iOS 9** | **iOS 10 and above** | **Android** |\n| Number.isFinite | Support | Support | Support |\n| Number.isNaN | Support | Support | Support |\n| Number.parseInt | Support | Support | Support |\n| Number.parseFloat | Support | Support | Support |\n| Number.isInteger | Support | Support | Support |\n| Number.EPSILON | Support | Support | Support |\n| Number.isSafeInteger | Support | Support | Support |\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Math** | **iOS 9** | **iOS 10 and above** | **Android** |\n| Math.trunc | Support | Support | Support |\n| Math.sign | Support | Support | Support |\n| Math.cbrt | Support | Support | Support |\n| Math.clz32 | Support | Support | Support |\n| Math.imul | Support | Support | Support |\n| Math.fround | Support | Support | Support |\n| Math.hypot | Support | Support | Support |\n| Math.expm1 | Support | Support | Support |\n| Math.log1p | Support | Support | Support |\n| Math.log10 | Support | Support | Support |\n| Math.log2 | Support | Support | Support |\n| Math.sinh | Support | Support | Support |\n| Math.cosh | Support | Support | Support |\n| Math.tanh | Support | Support | Support |\n| Math.asinh | Support | Support | Support |\n| Math.acosh | Support | Support | Support |\n| Math.atanh | Support | Support | Support |\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Internal objects** | **iOS 9** | **iOS 10 and above** | **Android** |\n| Set | Support | Support | Support |\n| Map | Support | Support | Support |\n| Proxy | No support | Support | Support |\n| Reflect | Support | Support | Support |\n| Promise | Support | Support | Support |\n\n## Limitations on Dynamic Execution Script\n\nFor sake of security, Mini Program limits some of the syntax and APIs of ES.\n\n- It does not support eval using\n\n- setTimeout and setInterval functions, and supports only the function for callback parameters. Dynamic execution of codes is not supported.\n\n- It does not support using new Function to create a function.\n\n## Reserved Words of Module Name\n\nThe logic layer of Mini Program supports the ES2015 module syntax but regards some internal object names (such as window and document) of browser as the reserved words for emergency needs in the future. Those reserved words cannot be used as the module name. The reserved words include `globalThis`, `global`, `fetch`, `self`, `window`, `document`, `location` and `XMLHttpRequest`. For more details, see the descriptions of module name reserved words in [framework description](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_overview).",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_mini-program-javascript-engine",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_framework_mini-program-javascript-engine.json"
}