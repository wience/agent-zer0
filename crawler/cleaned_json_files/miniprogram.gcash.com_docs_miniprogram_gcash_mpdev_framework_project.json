{
  "title": "Mini program project configurations",
  "content": "# Mini program project configurations\n\n2022-07-03 18:44\n\nWith this topic, you can learn to use the `mini.project.json` file in the root directory to configure the mini program project.\n\n## Overview\n\nIn addition to `app` and `page`, the mini program framework also includes `project` to describe the whole mini program project. For more information, refer to [Framework overview](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_overview).\n\nThe `project` refers to the `mini.project.json` file that must be placed in the root directory of the mini program project. You can use the `mini.project.json` file to configure advanced features, as listed in the table below.\n\n## Features\n\nThe following table lists the configuration features of the mini program project:\n\n|     |     |     |\n| --- | --- | --- |\n| **Field Name** | **Data Type** | **Description** |\n| miniprogramRoot | Path String | Specifies the relative path of the mini program source code (the directory where the `app.json` file is located). |\n| component2 | Boolean | Whether to enable custom components.<br>To enable custom components, check **Enable component2 compile** in the **Details > Project configuration** of the IDE. For more information, refer to [Custom component introduction](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_custom-component_introduction). |\n| axmlStrictCheck | Boolean | Whether to enable axml strict syntax check. Once enabled, it can detect the error of unclosed tags and more.<br>To enable axml strict syntax check, check **Enable Strick Axml Check** in the **Details > Project configuration** of the IDE. |\n| enableHMR | Boolean | Whether to enable simulator hot update. |\n| enableNodeModuleBabelTransform | Boolean | Whether to enable es6 syntax transformation. |\n| exclude | Array\\[String\\] | The file or file folder to exclude when building package. It follows Glob syntax. For more information, see [exclude package blacklist](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_project#xi92I). |\n\n### `exclude` package blacklist\n\nWhen you upload a mini program to Mini Program Platform, the local source codes will be packaged and uploaded to the cloud for building. In addition to the above files, the source code package also includes the following contents:\n\n- Mini program source code files:\n\n- `.acss`\n- `.axml`\n- `.js`\n- `.json`\n- `.sjs`\n\n- Dependency packages in the `node_modules` directory\n\nWhen uploading, if the source code package is still too large after compression, network timeout may be triggered. To resolve this error, you can add unnecessary files that are built on the cloud to the `exclude` blacklist. For example, if you precompile the code through `src` -\\> `dist`, you need to exclude the files in the `src` directory and the `devDependencies` tool in the `node_modules` directory when you upload the mini program.\n\nThe following sample code indicates that the source code package excludes the files in the `src` and `node_modules` directories under the root directory of the project:\n\ncopy\n\n```json\n\"exclude\": [\\\n  \"src/**\",\\\n  \"node_modules/**\"\\\n]\n```",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/framework_project",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_framework_project.json"
}