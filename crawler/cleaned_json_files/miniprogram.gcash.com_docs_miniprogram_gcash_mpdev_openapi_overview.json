{
  "title": "Overview",
  "content": "# Overview\n\n2022-07-05 23:31\n\nMini programs offer a set of OpenAPIs to achieve various capabilities, for example, the payment capability. You can use the POST method to send HTTPS requests and receive responses accordingly.\n\nThe following section mainly introduces the message structure and the end-to-end message transmission workflow.\n\n# Versioning\n\nThe current API version is `v1`. The version is specified in the URL.For example:\n\n`https://{host}/miniprogram/api/v1/payments/pay`.\n\n# Message structure\n\nBefore you make any request, it is important to understand how OpenAPI works and how requests and responses are structured. This section presents general information (such as message structure, message fields, and message transmission) of online messages between your system and wallet backend.\n\n## Request structure\n\nThe following figure illustrates the request structure.\n\n![image](https://yuque.antfin.com/images/lark/0/2021/png/5956329/1629792994513-31c649b8-547c-4200-bba7-1282accd1d98.png)\n\nFigure 1. Request structure\n\n### Request URL\n\nThe request URL is: `https://{host}/api/{restful_path}`, which has the following structure:\n\n- **host**: includes the host that is the standard domain name assigned by the wallet backend.\n- **resful\\_path** **:** is the path to the interface, for example, `/{version}/payments/pay`\n\n- **version**: is the version of OpenAPIs, for example, `v1` or `v2`.\n\nAn interface can be uniquely identified by `restful_path`.For example, the `/v1/payments/pay` is different from `/v2/payments/pay`.\n\n### Request method\n\nPOST method is used to make an HTTP request.\n\n### Request header\n\nThe request header mainly contains the following fields.\n\n**Note**: Field names are case-insensitive.\n\n|     |     |     |\n| --- | --- | --- |\n| **Header** | **Required** | **Code sample** |\n| Signature | Yes | `Signature: algorithm=RSA256, keyVersion=1, signature=****` |\n| Content-Type | No | `Content-Type: application/json; charset=UTF-8` |\n| Client-Id | Yes | `Client-Id: ****` |\n| Request-Time | Yes | `Request-Time: 2019-04-04T12:08:56.253+05:30` |\n\nTable. Request header\n\nFor details of each header field, see the following description.\n\n#### Signature\n\nSignature contains key-value pairs that are separated by comma (,). Each key-value pair is an equation, which is a key joined with its value with an equal sign (=).\n\nThe following keys can be configured:\n\n- **algorithm**: Specify the digital signature algorithm that is used to generate the signature. The value is not case-sensitive. RSA256 and ECC224 are supported, and RSA256 is by default.\n- **keyVersion**: Specify the key version that is used to generate or validate the signature. By default, the value is the latest version of the key associated with **Client-Id**.\n- **signature**: Contain the signature value of the request. For details about how to generate a signature, see the [Generate a signature](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/call_api#HGNu0) section.\n\nExample:\n\ncopy\n\n```json\nSignature: algorithm=RSA256, keyVersion=1,\nsignature=KEhXthj4bJ801Hqw8kaLvEKc0Rii8KsNUazw7kZgjxyGSPuOZ48058UVJUkkR21iD9JkHBGR\nrWiHPae8ZRPuBagh2H3qu7fxY5GxVDWayJUhUYkr9m%2FOW4UQVmXaQ9yn%2Fw2dCtzwAW0htPHYrKMyrT\npMk%2BfDDmRflA%2FAMJhQ71yeyhufIA2PCJV8%2FCMOa46303A0WHhH0YPJ9%2FI0UeLVMWlJ1XcBo3Jr\nbRFvcowQwt0lP1XkoPmSLGpBevDE8%2FQ9WnxjPNDfrHnKgV2fp0hpMKVXNM%2BrLHNyMv3MkHg9iTMOD%\n2FFYDAwSd%2B6%2FEOFo9UbdlKcmodJwjKlQoxZZIzmF8w%3D%3Dxxxx\n```\n\n#### Content-Type (Optional)\n\n**Content-Type** indicates the media type of the body of the request, as defined by [RFC2616](https://tools.ietf.org/html/rfc2616). In which, **charset** is used for generating/validating the signature.\n\nFor example：\n\ncopy\n\n```plaintext\nContent-Type: application/json; charset=UTF-8\n```\n\n#### Client-Id\n\n**Client-Id** is used to identify a client and is associated with the keys that are used for the signature.\n\nAlso in Mini Program OAuth scenario, here the **Client-Id** is also the client ID of OAuth, which is filled in the Mini Program SAAS Platform as follow:\n\n![image](https://yuque.antfin.com/images/lark/0/2021/png/5956329/1626676613999-eae5e5ef-69f0-4c17-bd5d-5ff54ad442d2.png)\n\n#### Request-Time\n\nSpecify the time when the request is sent, as defined by [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html).\n\n**Note**: This field must be accurate to milliseconds.\n\ncopy\n\n```plaintext\nRequest-Time: 2019-04-04T12:08:56.253+05:30\n```\n\n### Request body\n\nThe request body contains the detailed request information in JSON format. Fields enclosed in the request body vary depending on services. For more information, see the specific API specification document.\n\n## Response structure\n\nThe following figures illustrate the response structure:\n\n![image](https://yuque.antfin.com/images/lark/0/2021/png/5956329/1629793028547-76e0ae97-4bf9-4856-a97a-994fb07f3d72.png)\n\nFigure 2. Response structure\n\n### Response header\n\nThe response header carries the information about the response, mainly containing the following fields.\n\n**Note**: Field names are case-insensitive.\n\n|     |     |     |\n| --- | --- | --- |\n| **Header** | **Required** | **Code sample** |\n| Signature | Yes | `Signature: algorithm=RSA256, keyVersion=1, signature=****` |\n| Content-Type | No | `Content-Type: application/json; charset=UTF-8` |\n| Client-Id | Yes | `Client-Id: ****` |\n| Response-Time | Yes | `Response-Time: 2019-04-04T12:08:56.253+05:30` |\n\nTable. Response header\n\nFor details of each header field, see the following description.\n\n#### Signature\n\nSignature contains key-value pairs that are separated by comma (,). Each key-value pair is an equation, which is a key joined with its value with an equal sign (=).\n\nThe following keys can be configured:\n\n- **algorithm**: Specifies the digital signature algorithm that is used to generate the signature. The value is not case-sensitive. RSA256 and ECC224 are supported, and RSA256 is by default.\n- **keyVersion**: Specifies the key version that is used to generate or validate the signature. By default, the value is the latest version of the key associated with **Client-Id**.\n- **signature**: Contains the signature value of the response.\n\nExample:\n\ncopy\n\n```json\nSignature: algorithm=RSA256, keyVersion=1,\nsignature=KEhXthj4bxxxJ801Hqw8kaLvEKc0Rii8KsNUazw7kZgjxyGSPuOZ48058UVJUkkR21iD9JkHBGR\nrWiHPae8ZRPuBagh2H3qu7fxY5GxVDWayJUhUYkr9m%2FOW4UQVmXaQ9yn%2Fw2dCtzwAW0htPHYrKMyrT\npMk%2BfDDmRflA%2FAMJhQ71yeyhufIA2PCJV8%2FCMOa46303A0WHhH0YPJ9%2FI0UeLVMWlJ1XcBo3Jr\nbRFvcowQwt0lP1XkoPmSLGpBevxxxDE8%2FQ9WnxjPNDfrHnKgV2fp0hpMKVXNM%2BrLHNyMv3MkHg9iTMOD%\n2FFYDAwSd%2B6%xxxx\n```\n\n#### Content-Type (Optional)\n\n**Content-Type** indicates the media type of the body of the response, as defined by [RFC2616](https://tools.ietf.org/html/rfc2616). In which, **charset** is used for generating/validating the signature. For example：\n\ncopy\n\n```plaintext\nContent-Type: application/json; charset=UTF-8\n```\n\n#### Client-Id\n\n**Client-Id** is used to identify a client and is associated with the keys that are used for signature.\n\n#### Response-Time\n\nSpecifies the time when the response is returned, as defined by [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html).\n\n**Note**: This field must be accurate to milliseconds.\n\ncopy\n\n```plaintext\nResponse-Time: 2019-04-04T14:08:56.253+05:30\n```\n\n### Response body\n\nThe response body contains the information responding to the client. Fields in this section vary depending on services. However, the `result` object, which indicates the result of an API call, is always contained.\n\nWhen the result status ( `resultStatus`) is failed, unknown, or accepted, the result code ( `resultCode` ) means an error code and the result message ( `resultMessage` ) means an error message, which is used for error handling. For more information about error codes, see the [Error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/error_codesv2) chapter.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Field** | **Data Type** | **Required** | **Description** |\n| resultStatus | String | No | Result status. Valid values are:<br>- `S` : Successful<br>- `F` : Failed<br>- `U` : Unknown<br>- `A` : Accepted, not yet succeeded, but can proceed with some actions. |\n| resultCode | String | No | Result code.<br>Maximum length: 64 characters |\n| resultMessage | String | No | Result message that describes the result code in detail.<br>Maximum length: 256 characters |\n\n# Message transmission workflow\n\nThe following figure is an example that illustrates the message transmission workflow in Mini Program.\n\n![image](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\nFigure 1. Message transmission workflow\n\n# Overall procedure\n\nFollow the overall procedure to call an API.\n\n## Preparations\n\nTo prevent some potential errors that you might get in the response, consider the following factors:\n\n- Understand [API idempontency](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_idempotency)\n\n## 1. Construct a request\n\nConstruct a request by complying with the [request structure](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/openapi_overview#DSjrC), including the request header and body.\n\nTo ensure message transmission security, perform the following security measures when constructing a request. For details, see the [Message transmission security](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/msg_transmission_security) chapter.\n\n1. Must [sign a request](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/call_api). Message signing and signature validation are mandatory for all requests and responses.\n2. [Encode](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/call_api#HGNu0) a request to prevent errors or ambiguity that might be caused by special characters enclosed in a request. For more information, see the [Message encoding](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/encode) chapter.\n\n## 2\\. Send a request\n\nYou can send a request with your preferred platforms or tools, for example, Postman or cURL command.\n\n## 3\\. Check the response\n\nThe response is usually returned in JSON or XML format. For details about the response, see the [response structure](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/openapi_overview#HaW6U) section. After you receive the response, [validate the signature of the response](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/call_api#2QWY3).\n\n## 4\\. Check the status code\n\nThe response data can vary depending on the services. However, the `result`  field, which indicates the result of an API call, is always included. If an error occurs when you call an API, an error response is returned, where [the](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/openapi_overview#GN2yb) `result` [object](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/openapi_overview#GN2yb) indicates the error code and error message for you to troubleshoot issues. For more information, see the [Error code](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/error_codesv2) chapter.",
  "date": "2022-07-05",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/openapi_overview",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_openapi_overview.json"
}