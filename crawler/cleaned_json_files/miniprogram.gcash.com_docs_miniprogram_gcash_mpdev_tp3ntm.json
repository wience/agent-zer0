{
  "title": "/v1/payments/inquiryRefund",
  "content": "# /v1/payments/inquiryRefund\n\n2022-07-03 18:44\n\nPOST `/v1/payments/inquiryRefund`\n\nThe `inquiryRefund` API is used to inquire the refund result, usually when not able to receive the refund result after a long period of time. Such as:\n\n**Note:**\n\n- After Merchant initiates refund and not able to receive the refund result after a long period of time, it can poll Refund Inquiry interface of AMS.\n- Merchant uses InquiryRefund to determine the Refund status in the asynchronous Refund processing scenario.\n- Round-robin interval, recommended 5s once, up to 1 minute.\n\n# Message structure\n\n## Request\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** |\n| partnerId | String | Yes | The partnerId allocated by wallet.<br>Max. length: 32 characters. |\n| refundId | String | No | The unique ID of a refund generated by Wallet.<br>Max. length: 64 characters. |\n| refundRequestId | String | No | The unique ID of a refund generated by Merchant.<br>Max. length: 64 characters. |\n| extendInfo | String | No | The extend information,wallet and merchant can put extend info here.<br>Max. length: 4096 characters. |\n\n## Response\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** |\n| result | [**Result**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/vs3pkf#sHXZc) | Yes | The request result, which contains information related to the request result, such as status and error codes. |\n| refundId | String | No | The unique ID of a refund generated by Wallet.<br>Max. length: 64 characters. |\n| refundRequestId | String | No | The unique ID of a refund generated by Merchant.<br>Max. length: 64 characters. |\n| refundAmount | [**Amount**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/vs3pkf#2umUE) | No | Refund amount for display of user consumption records page. |\n| refundReason | String | No | Refund reason.<br>Max. length: 256 characters. |\n| refundTime | String/Datetime | No | Deduct money from merchant success time, after then will start to refund money to user. which follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. |\n| refundStatus | String | No | PROCESSING - refund is processing.<br>SUCCESS - refund success.<br>FAIL - refund failed. |\n| refundFailReason | String | No | The fail reason of refund order when refundStatus is FAIL.<br>Max. length: 256 characters. |\n| extendInfo | String | No | The extend information,wallet and merchant can put extend info here.<br>Max. length: 4096 characters. |\n\n### Result Process Logic\n\nFor different request results, different actions are to be performed. See the following list for details:\n\n- If the value of **result.resultStatus** is **S**, the refund inquiry is successful. And you have to check **refundStatus**:\n\n-  if **refundStatus** is **PROCESSING**, means refund is processing;\n- if **refundStatus** is **SUCCESS**, means refund success;\n- if **refundStatus** is **FAIL**, means refund failed.\n\n- If the value of **result.resultStatus** is **F**, the refund inquiry is fail. When **resultCode** is **REFUND\\_NOT\\_EXIST**, it means that the refund is not yet accepted and can be treated as refund failure. For the other failure reason, human intervention is recommended.\n- If the value of **result.resultStatus** is **U**, the refund inquiry is unknown exception.processing failure occurs, probably due to system / network issues,  merchant can retry.\n\n### Result\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **No** | **resultStatus** | **resultCode** | **resultMessage** |\n| 1 | S | SUCCESS | Success. |\n| 2 | U | UNKNOWN\\_EXCEPTION | An API calling is failed, which is caused by unknown reasons. |\n| 3 | U | REQUEST\\_TRAFFIC\\_EXCEED\\_LIMIT | The request traffic exceeds the limit. |\n| 4 | F | REFUND\\_NOT\\_EXIST | Refund is not exist. |\n| 5 | F | INVALID\\_API | The called API is invalid or not active. |\n| 6 | F | PARAM\\_ILLEGAL | Illegal parameters. For example, non-numeric input, invalid date. |\n| 7 | F | PROCESS\\_FAIL | A general business failure occurred. Don't retry. |\n| 8 | F | ACCESS\\_DENIED | The access is denied. |\n| 9 | F | EXPIRED\\_AGENT\\_TOKEN | The access token of mini program is expired. |\n| 10 | F | INVALID\\_AGENT\\_TOKEN | The access token of mini program is invalid. |\n\n# Sample\n\nFor example, a Korean user purchases a 100 USD merchandise at a Japanese merchant with cross-border payment.\n\nMerchant refund the money, but not return the refund result. so merchant begin to inquiry refund result.\n\n![/v1/payments/inquiryRefund](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\n1. User could start refund request from the Mini Program or the merchant cashier （Step 1).\n2. The merchant server calls /v1/payments/refund interface to refund (Step 2).\n3. E-wallet returns the refund result to the merchant server (Step 3).\n4. Also the merchant server could call /v1/payments/inquiryRefund interface to query the refund result (Step 4).\n5. E-wallet returns refund inquiry result to the merchant server (Step 5).\n6. The merchant should return the refund result to the Mini Program or the merchant cashier (Step 6).\n\n## Request\n\ncopy\n\n```json\n{\n \"refundId\": \"1022188000000000001xxxx\",\n \"refundRequestId\":\"20200101234567890132xxxx\",\n \"partnerId\":\"1022172000000000001xxxx\",\n \"extendInfo\": \"{\\\"customerBelongsTo\\\":\\\"siteNameExample\\\"}\"\n}\n```\n\n- **refundId** refundId return by wallet.\n- **refundRequestId** the uniqueId of a refund generated by Merchant.\n- **partnerId** the partnerId allocated by wallet.\n- **extendInfo,** includes key - **customerBelongsTo** the e-wallet that the customer uses. Corresponding to the field 'siteName' that obtained from the API 'my.getSiteInfo'.\n\n**Note:**\n\nThis interface support querying with **refundId** or **refundRequestId**. **paymentId** has a higher priority than **refundRequestId**, which means that if you offer both **refundId** and **refundRequestId**, we will use **refundId** and ignore **refundRequestId**.\n\n## Response\n\ncopy\n\n```json\n{\n \"result\": {\n    \"resultCode\":\"SUCCESS\",\n    \"resultStatus\":\"S\",\n    \"resultMessage\":\"success\"\n  },\n \"refundId\":\"20200101234567890144444xxxx\",\n \"refundRequestId\": \"20200101234567890155555xxxx\",\n \"refundAmount\":{\n    \"value\":\"100\",\n    \"currency\":\"USD\"\n },\n \"refundReason\":\"refund reason.\",\n \"refundTime\":\"2020-01-02T12:01:01+08:30\",\n \"refundStatus\":\"SUCCESS\",\n \"refundFailReason\":\"the fail reason of refund order when refundStatus is FAIL.\",\n \"extendInfo\":\"\"\n}\n```\n\n- **result****.resultStatus==S**shows that the refund is successful.\n- **refundId**refundId return by wallet.\n- **refundRequestId**merchant refund request id.\n- **refundAmount**refund amount by merchant.\n- **refundReason**describes the refund reason.\n- **refundTime**refund process finish time, that means deduct from merchant success.\n- **refundStatus**refund Status.\n- **refundStatus.PROCESSING:**refund is processing.\n- **refundStatus.SUCCESS:**refund success.\n- **refundStatus.FAIL:**refund failed.\n- **refundFailReason**the fail reason of refund order when refundStatus is Fail.",
  "date": "2022-07-03",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/tp3ntm",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_tp3ntm.json"
}