{
  "title": "/v1/payments/refund",
  "content": "# /v1/payments/refund\n\n2022-07-05 23:31\n\nPOST `/v1/payments/refund`\n\nThe `refund` API is used to initiate a refund of a successful payment,refund a transaction and return money back to payer, the transaction can be refunded partially or fully.The api will return SUCCESS when deduct money from merchant succes.\n\n**Note:**\n\n1) Merchant/partner submits refund request to wallet directly\n\n2) Wallet will determine if the refund is successful based on its own payment status and respond to Merchant/partner.\n\n3) Can support multiple refund for 1 success payment， but total refund amount can not greater than payment amount.\n\n# Message structure\n\n## Request\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** |\n| partnerId | String | Yes | The partnerId allocated by wallet.<br>Max. length: 32 characters. |\n| refundRequestId | String | Yes | The unqiueId of a refund generated by Merchant.<br>- Max. length: 64 characters.<br>- This field is used for [idempotence](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_idempotency) control. For the refund requests which are initiated with the same `refundRequestId` and reach a final status (S or F), the wallet must return the unique result. |\n| paymentId | String | No | The payment Id for the corresponding original payment.<br>Max. length: 64 characters. |\n| paymentRequestId | String | No | The paymentRequestId for the corresponding original payment.<br>Max. length: 64 characters. |\n| refundAmount | [**Amount**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/vs3pkf#2umUE) | Yes | Refund amount. |\n| refundReason | String | No | Refund reason.<br>Max. length: 256 characters. |\n| extendInfo | String | No | The extend information,wallet and merchant can put extend info here.<br>Max. length: 4096 characters. |\n\n## Response\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** |\n| result | [**Result**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/vs3pkf#sHXZc) | Yes | The request result, which contains information related to the request result, such as status and error codes. |\n| refundId | String | No | Unique refund order number. It is mandatory when the **result.resultStatus** is **S**.<br>Max. length: 64 characters. |\n| refundTime | String/Datetime | No | Deduct money from merchant success time, after then will start to refund money to user. which follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. It is mandatory when the **result.resultStatus** is **S**. |\n| extendInfo | String | No | The extend information,wallet and merchant can put extend info here.<br>Max. length: 4096 characters. |\n\n### Result Process Logic\n\nFor different request results, different actions are to be performed. See the following list for details:\n\n- If the value of **result.resultStatus** is **S**, the refund is successful, merchant/partner can process as success.\n- If the value of **result.resultStatus** is **F**, the refund has failed, such as caused by refund date time exceeding the allowable refund window ( **result** **.** **resultCode** = **REFUND\\_WINDOW\\_EXCEED**), such as refund amount greater than payment amount etc.\n- If the value of **result.resultStatus** is **U**, means refund unknown exception, merchant/partner can calls Refund Inquiry Interface/retry Refund Interface to query to get refund  result.  What need to notice is as follow:\n\n- U status (inquiry/retry still get U)  can not set to fail or success on merchant/partner system.\n- U status (inquiry/retry still get U)  should not refund/charge to user by offline(Maybe will make fund loss).\n\n- If other response (almost never occur),merchant/partner should process like U.\n\n### Result\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| **No** | **resultStatus** | **resultCode** | **resultMessage** |\n| 1 | S | SUCCESS | Success. |\n| 2 | U | UNKNOWN\\_EXCEPTION | An API calling is failed, which is caused by unknown reasons. |\n| 3 | U | REQUEST\\_TRAFFIC\\_EXCEED\\_LIMIT | The request traffic exceeds the limit. |\n| 9 | U | REFUND\\_IN\\_PROCESS | Refund is under processing. |\n| 4 | F | REPEAT\\_REQ\\_INCONSISTENT | Repeated submit, and requests are inconsistent. |\n| 5 | F | PROCESS\\_FAIL | A general business failure occurred. Don't retry. |\n| 6 | F | PARAM\\_ILLEGAL | Illegal parameters exist. For example, a non-numeric input, or an invalid date. |\n| 7 | F | INVALID\\_API | The called API is invalid or not active. |\n| 8 | F | ACCESS\\_DENIED | The access is denied. |\n| 10 | F | PARTNER\\_STATUS\\_ABNORMAL | Partner status abnormal. |\n| 11 | F | ORDER\\_NOT\\_EXIST | Order does not exist. |\n| 12 | F | ORDER\\_STATUS\\_INVALID | Order status is invalid. |\n| 13 | F | REFUND\\_WINDOW\\_EXCEED | Exceed Refund window. |\n| 14 | F | REFUND\\_AMOUNT\\_EXCEED | The total refund amount has exceed the payment amount. |\n| 15 | F | PARTNER\\_BALANCE\\_NOT\\_ENOUGH | The partner balance is not enough. |\n| 16 | F | CURRENCY\\_NOT\\_SUPPORT | The currency is not supported. |\n| 17 | F | EXPIRED\\_AGENT\\_TOKEN | The access token of mini program is expired. |\n| 18 | F | INVALID\\_AGENT\\_TOKEN | The access token of mini program is invalid. |\n\n# Sample\n\nFor example, a wallet user applies for refund of 100 USD  of a successful payment at merchant/partner. So merchant/partner will call refund API to wallet to refund amount to user.\n\n![/v1/payments/refund](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\n1. User could start refund request from the Mini Program or the merchant cashier （Step 1).\n2. The merchant server calls /v1/payments/refund interface to refund (Step 2).\n3. E-wallet returns the refund result to the merchant server (Step 3).\n4. The merchant should return the refund result to the Mini Program or the merchant cashier (Step 4).\n\n## Request\n\ncopy\n\n```json\n{\n  \"partnerId\": \"P000000000000001xxxx\",\n  \"refundRequestId\": \"2019112719074101000700000088881xxxx\",\n  \"paymentId\": \"201911271907410100070000009999xxxx\",\n  \"refundAmount\": {\n    \"currency\": \"USD\",\n    \"value\": \"10000\"\n  },\n    \"extendInfo\": \"{\\\"customerBelongsTo\\\":\\\"siteNameExample\\\"}\"\n}\n```\n\n- **partnerId** is the unique identifier of merchant/partner, assigned by wallte.\n- **refundRequestId** is the unique ID of this refund request, generated by merchant/partner, merchant/partner should make sure it is unique, because wallet will use **partnerId** and **refundRequestId** to do idempotent process.\n- **paymentId** is the payment ID generated by Wallet, which is the unique payment identifier associated with this refund.\n- **refundAmount** describes 100 USD should refund to user, refund amount should less than origin payment amount. The amount to pay out for this **refund.refundAmount.currency** and **paymentAmount.currency** in [payment request](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v1_pay) are the same. And if there are multiple refunds for a particular payment, the total successful refunded amount cannot exceed the payment amount in the payment transaction.\n- **extendInfo,** includes key - **customerBelongsTo** the e-wallet that the customer uses. Corresponding to the field ' **siteName**' that obtained from the API ' **my.getSi** **teInfo**', in the Mini Program scenario this is mandatory.\n\n**Note:**\n\n- **paymentId** and **paymentRequestId** can not both empty, wallet has to find out the origin payment order based on **paymentId** or **paymentRequestId**.\n\n## Response\n\ncopy\n\n```json\n{\n  \"result\": {\n    \"resultCode\": \"SUCCESS\",\n    \"resultStatus\": \"S\",\n    \"resultMessage\": \"success\"\n  },\n  \"refundId\": \"2019112719074101000700000019000xxxx\",\n  \"refundTime\": \"2019-11-27T12:01:01+08:30\"\n}\n```\n\n- **result.resultStatus==S** shows that the _Wallet_  refund is successful.\n- **refundId** is generated by Wallet, uniquely identifies the refund.\n- **refundTime** describes the success date time of this refund.\n\n九色鹿",
  "date": "2022-07-05",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v1_refund",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_v1_refund.json"
}