{
  "title": "/v2/payments/pay",
  "content": "# /v2/payments/pay\n\n2022-07-05 23:31\n\nPOST `/v2/payments/pay`\n\nThe `pay` API is used to initiate a payment request to wallets.\n\n**Note:** A payment which takes place at wallets _._\n\n1）The merchant/partner initiates a payment request to wallet through this interface.\n\n2）The wallet will handle different payment scenarios based on the parameters in the request.\n\nCurrently, this API support following scenarios:\n\n- Cashier payment：Usually used in the online payment scenario. In this scenario, the merchant/partner will call this API to create an order, and the wallet will return the cashier page URL to the merchant/partner, and then redirect to this cashier page. So user can finish the payment in the cashier page.\n\n# Message structure\n\n## Request\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| appId | String | Yes | The Mini Program app ID.<br>Max. length: 32 characters. | \"3333010071465913xxx\" |\n| productCode | String | No | The product code, `AGREEMENT_PAYMENT, IN_STORE_PAYMENT, CASHIER_PAYMENT`<br>Max. length: 32 characters. | \"CASHIER\\_PAYMENT\" |\n| salesCode | String | No | Defined by wallets. The wallet uses the `salesCode` to get the contract configuration which includes fee, limitation information, and so on.<br>Max. length: 32 characters. | \"202011271xxx\" |\n| paymentRequestId | String | Yes | The unqiue ID of a payment generated by merchants.<br>- Max. length: 64 characters.<br>- This field is used for [idempotence](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_idempotency) control. For the payment requests which are initiated with the same `paymentRequestId` and reach a final status (S or F),  the walletmust return the unique result. | \"2019112719074101000700000077771xxxx\" |\n| paymentAmount | [**Amount**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#2umUE) | Yes | The order amount, displaying users' consumption records, payment results page. | {<br>        \"currency\": \"USD\",<br>        \"value\": \"10000\"<br>} |\n| order | [**Order**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#pKKxn) | No | The purchase order details, such as Merchant, Buyer, Goods, etc. The information in the Order is only used to display user's payment result page and transactions history, regulation reporting, etc. It will not make use of the amount in the order for fund operation. | {<br>      \"referenceOrderId\":\"OrderID\\_0101010101xxxx\",<br>      \"orderDescription\":\"SHOES\",<br>      \"orderAmount\":{<br>        \"currency\": \"USD\",<br>        \"value\": \"10000\"<br>      },<br>      \"orderCreateTime\": \"2020-01-01T12:01:01+08:30\",<br>      \"merchant\":{<br>          \"referenceMerchantId\":\"M00000000001xxxx\",<br>          \"merchantMCC\":\"1405\",<br>          \"merchantName\":\"UGG Technology Limited\",<br>          \"merchantDisplayName\":\"UGG\",<br>          \"merchantAddress\":{<br>             \"region\":\"MY\",<br>             \"city\":\"KL\"<br>          }<br>       },<br>      \"env\": {<br>          \"osType\": \"IOS\",<br>          \"terminalType\": \"APP\"<br>         } <br>} |\n| paymentMethod | [**PaymentMethod**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#oyGqE) | No | It is used to collect fund by wallets. | {<br>\"paymentMethodType\":\"ID\\_000001xxxx\",<br>\"paymentMethodId\":\"1\"<br>} |\n| paymentFactor | [**PaymentFactor**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#4Xo31) | No | In the Mini Program scenario, it is fixed value, map format. | {<br>\"needSurcharge\": true,<br>\"isPaymentEvaluation\": false<br>} |\n| paymentExpiryTime | String/Datetime | No | The payment order close time defined by merchant,<br>which follows the <br>[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. | \"2020-06-08T12:12:12+08:00\" |\n| paymentRedirectUrl | String | No | The redirect URL defined by merchants.<br>Max. length: 1024 characters. | \"https://www.merchant.com/redirectxxx\" |\n| paymentNotifyUrl | String | No | The payment success notification URL defined by merchants.<br>Max. length: 1024 characters. | \"https://www.merchant.com/paymentNotifyxxx\" |\n| voidNotifyUrl | String(2048) | No | the url that void notification will be sent to. |  |\n| extendInfo | String | No | The extensive information. The wallet and merchant can put extensive information in this property.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n## Response\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| **Property** | **Data type** | **Required** | **Description** | **Example** |\n| result | [**Result**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#sHXZc) | Yes | The request result, which contains information related to the request result, such as status and error codes. | {<br>    \"resultCode\": \"SUCCESS\",<br>    \"resultStatus\": \"S\",<br>    \"resultMessage\": \"success\"  <br>} |\n| paymentId | String | No | The unqiue ID of a payment generated by Wallet.<br>Max. length: 64 characters. | \"4374784884773748478499xxxx\" |\n| paymentTime | String/Datetime | No | Payment success time, which follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard. | \"2020-01-08T12:12:12+08:00\" |\n| redirectActionForm | [**RedirectActionForm**](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_data_dict#2J25W) | No | Indicates a redirect URL. | {<br>    \"method\":\"POST\",<br>    \"redirectionUrl\":\"https://www.wallet.com/cashier?orderId=xxxxxxx\"<br>} |\n| authExpiryTime | String/Datetime | No | The authorization expiry time, has value only when `paymentFactor.isAuthorizationPayment` is `true` . | \"2020-07-08T12:12:12+08:00\" |\n| extendInfo | String | No | The extensive information. The wallet and merchant can put extensive information in this property.<br>Max. length: 4096 characters. | \"This is additional information\" |\n\n### Result process logic\n\nIn the response, the `result.resultStatus` field indicates the result of processing a request as follows.\n\n|     |     |\n| --- | --- |\n| **resultStatus** | **Decription** |\n| S | The corresponding `result.resultCode` is \"SUCCESS\" and the  `result.resultMessage`  is \"Success\".<br>That means that this transaction is successful. The merchant/partner can update transaction to success. What needs to note is :<br>- In the payment evaluation scenario, 'S' just means that the evaluation is successful and there is no real fund transfer.  <br>- In authorization payment scenario, 'S' just means that the authorization  is successful, and need to wait for the capture operation to finish the  transaction (finish the final fund flow). |\n| A | The corresponding `result.resultCode` is \"ACCEPT\"; and the  `result.resultMessage` varies based on different situations.<br>That means that the transaction is already accepted by wallets. The merchant/partner needs to continue the next operation according to the `redirectActionForm`  response, such as display the order code to users or redirect to the wallet cashier page. |\n| U | The corresponding `result.resultCode` is \"UNKNOWN\\_EXCEPTION\" and `result.resultMessage`  is \"An API calling is failed, which is caused by unknown reasons.\". For details, see the [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/error_codes#oyy9K) section.<br>That means that unknown exception occurs on the wallet side. The merchant/partner can inquiry the payment result or wait for the payment status notification to get the real payment result. What needs to note is :<br>- Payment evaluation scenario can not be inquiried.<br>- \\`U\\` status can not set to fail or success on the merchant/partner system.<br>- \\`U\\` status can not refund to users by offline (Maybe will make fund loss). |\n| F | That means this transaction is failed. The corresponding `result.resultCode`  and `result.resultMessage` vary based on different situations. For details, see the following [Error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_pay#QiyKe) section.<br>Usually the \\`F\\` transactions can not be successful again if use the same payment request to call wallets. |\n\n# Error codes\n\nError codes are usually classified into the following categories:\n\n- [Common error codes](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/error_codes#oyy9K): are common for all Mini Program OpenAPIs.\n- API-specific error codes: are listed in the following table.\n\n|     |     |     |\n| --- | --- | --- |\n| **resultStatus** | **resultCode** | **resultMessage** |\n| U | PAYMENT\\_IN\\_PROCESS | The payment is still under process. |\n| A | ACCEPT | Need next actions according to the <br>`RedirectActionForm`<br>field. |\n| F | REPEAT\\_REQ\\_INCONSISTENT | Repeated submission, and requests are inconsistent. |\n| F | PAYMENT\\_AMOUNT\\_EXCEED\\_LIMIT | Payment amount exceeds limit. |\n| F | USER\\_NOT\\_EXIST | User not exist. |\n| F | USER\\_STATUS\\_ABNORMAL | The user status is abnormal. |\n| F | USER\\_BALANCE\\_NOT\\_ENOUGH | User balance is not enough for this payment. |\n| F | PARTNER\\_NOT\\_EXIST | Partner not exist. |\n| F | PARTNER\\_STATUS\\_ABNORMAL | Partner status abnormal. |\n| F | RISK\\_REJECT | Risk reject. |\n| F | CURRENCY\\_NOT\\_SUPPORT | The currency is not supported. |\n| F | ORDER\\_STATUS\\_INVALID | Order is in invaid status such closed. |\n| F | INVALID\\_ACCESS\\_TOKEN | Invalid accesstoken. |\n| F | USER\\_AMOUNT\\_EXCEED\\_LIMIT | Payment amount exceeds user's amount limit. |\n| F | AUTH\\_CODE\\_ALREADY\\_USED | Auth code already used. |\n| F | INVALID\\_CODE | Auth code illegal. |\n| F | EXPIRED\\_AGENT\\_TOKEN | The agent token of mini program is expired. |\n| F | INVALID\\_AGENT\\_TOKEN | The agent token of mini program is invalid. |\n\n# Sample\n\n## Cashier Payment\n\nFor example, a user purchases a 100 USD good at the merchant/partner(online merchant usually) , the merchant/partner calls this API to create the payment order first, the wallet will return the payment order ID and wallet cashier page URL to the merchant/partner, then merchant/partner can redirect user to wallet cashier page with the `my.tradePay` API.\n\n![/v2/payments/pay](https://ac.alipay.com/storage/2020/5/11/793a3d8d-5270-405b-9362-e6a670b9c842.png)\n\n1. The Mini Program creates an order.\n2. The merchant server calls this pay interface with paymentNotifyUrl to initialte payment flow.\n3. E-wallet server returns payment detail information with paymentId to the merchant server.\n4. The merchant server passes the payment detail information to the Mini Program.\n5. The Mini Program calls the my.tradePay interface to conduct the payment.\n6. When the payment reaches the final status, the e-wallet server notifies the merchant server of the payment result with paymentNotifyUrl provided in Step 2 (Step 8).\n7. Also the E-wallet App returns the payment result to the Mini Program (Step 9).\n\n### Request\n\ncopy\n\n```json\n{\n\n    \"appId\": \"3333010071465913xxx\",\n    \"paymentRequestId\": \"2019112719074101000700000077771xxxx\",\n    \"productCode\": \"CASHIER_PAYMENT\",\n    \"paymentAmount\": {\n        \"currency\": \"USD\",\n        \"value\": \"10000\"\n    },\n    \"order\":{\n      \"referenceOrderId\":\"OrderID_0101010101xxxx\",\n      \"orderDescription\":\"SHOES\",\n      \"orderAmount\":{\n        \"currency\": \"USD\",\n        \"value\": \"10000\"\n      },\n      \"orderCreateTime\": \"2020-01-01T12:01:01+08:30\",\n      \"merchant\":{\n          \"referenceMerchantId\":\"M00000000001xxxx\",\n          \"merchantMCC\":\"1405\",\n          \"merchantName\":\"UGG Technology Limited\",\n          \"merchantDisplayName\":\"UGG\",\n          \"merchantAddress\":{\n             \"region\":\"MY\",\n             \"city\":\"KL\"\n          }\n       },\n      \"env\": {\n          \"osType\": \"IOS\",\n          \"terminalType\": \"APP\"\n         }\n     },\n    \"paymentRedirectUrl\":\"https://www.merchant.com/redirectxxx\",\n    \"paymentNotifyUrl\":\"https://www.merchant.com/paymentNotifyxxx\"\n}\n```\n\n- **paymentRequestId** is generated by the merchant/partner, which uniquely identifies the payment. Wallet must make use of paymentRequestId for idempotent control. For example, if a payment with paymentRequestId== 2019112719074101000700000077771 has been processed successfully by Wallet, when the merchant/partneruses the same paymentRequestId for payment, Wallet will respond with sucessful payment.\n- **productCode** is the product code, including the `IN_STORE_PAYMENT` , `CASHIER_PAYMENT`, and `AGREEMENT_PAYMENT` information\n- **paymentRedirectUrl** is the redirect URL defined by the merchant/partner. In the cashier payment scenario, after the user finished payment in the wallet cashier page, the wallet will direct back to merchant based on this URL.\n- **paymentNotifyUrl** is the URL defined by the merchant/partner.  In the cashier payment scenario, after the user finished payment in the wallet cashier page, the wallet will notify the merchant of the payment result based on this URL.\n- **paymentAmount** describes the amount of 100 USD to be collected by Wallet from user's account for this payment.\n- **order** describes the order details of the purchase of the 100CNY merchandise by the  user at the  merchant. Such as Merchant, Buyer, Goods, etc are included in order . The information in the Order is only used to  display user's payment result page and transactions history,  regulation reporting, etc. It will not make use of the amount in the order for fund operation.\n\n### Response\n\ncopy\n\n```json\n{\n \"result\": {\n    \"resultCode\":\"ACCEPT\",\n    \"resultStatus\":\"A\",\n    \"resultMessage\":\"accept\"\n },\n \"paymentId\": \"4374784884773748478499xxxx\",\n \"redirectActionForm\":{\n    \"method\":\"POST\",\n    \"redirectionUrl\":\"https://www.wallet.com/cashier?orderId=xxxxxxx\"\n }\n}\n```\n\n- **result.resultStatus ==A** shows that the  payment is accept success. After user finish payment in cashier page, payment will change to success.\n- **paymentId** is generated by Wallet, uniquely identifies the payment.\n- **redirectActionForm** returns the cashier page URLto the merchant/partner. After the merchant/partner receives the accept result, which will be redirected to this URL.",
  "date": "2022-07-05",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/v2_pay",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_mpdev_v2_pay.json"
}