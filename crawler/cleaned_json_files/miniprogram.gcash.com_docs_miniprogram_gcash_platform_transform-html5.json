{
  "title": "How to transform an HTML 5 mobile app into an HTML 5 mini program",
  "content": "# How to transform an HTML 5 mobile app into an HTML 5 mini program\n\n2022-07-07 17:08\n\nThis topic describes the process to transform an HTML5 mobile app (native app) into an HTML5 mini program. With the web development approach, Progressive Web Application (PWA), this transformation makes it possible to have a scalable solution while keeping the digital experience consistent.\n\nThe following two types of mini programs are supported on Mini Program Platform:\n\n- **Mini Program based on** [**DSL**](https://miniprogram.gcash.com/docs/miniprogram_gcash/about/glossary#UH4Fp) **(Domain Specific Language)**\n\nWe recommend that you develop the default DSL-based mini programs. For more information, see [About Mini Program](https://miniprogram.gcash.com/docs/miniprogram_gcash/about/).\n\n- **Mini Program based on HTML5**\n\nHowever, to help you integrate your existing HTML5 mobile apps with the wallet app, you can choose the HTML5 mini program type.\n\n# What are HTML5 mini programs?\n\nHTML5 mini programs are the mini programs that are transformed from HTML5 mobile apps. HTML5 mini programs run in the WebView environment, so you can develop HTML5 mini programs as you do for web pages. Compared with HTML5 mobile apps, HTML5 mini programs are powered with more capabilities by calling mini program JSAPIs, thus improving user experience.\n\n## Benefits\n\nThere is no need to start from scratch if you already have an existing HTML5 mobile app. Different roles can enjoy the following benefits by transforming your HTML5 app into a mini program:\n\n- **Convenient**\n\nAs compared with the time-consuming learning of the Mini Program framework, developers can reuse their familiar web development knowledge to get started with Mini Program.\n\n- **Cost-efficient**\n\nMerchants, ISVs, and wallet developers just need to add a few lines of JavaScript code to the existing HTML5 app, and the HTML5 mini programs become ready.\n\n- **Consistent and user-friendly**\n\nEnd users can also benefit from a consistent user experience of mini programs and native apps.\n\n# Before you start\n\nBefore you start, make sure you have applied for an account and get on-boarded.\n\nAlso, you can see the following process flow to get an overview of the detailed steps:\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/12884741/1643250632271-1f354486-fde2-41f2-aaeb-6c5601ab51bd.png)\n\n**Note:**\n\nAs compared with the steps of DSL mini programs, the following steps that are shown in red in the above process flow are required:\n\n- **HTML5 mini program type**\n- **Entrance URL**\n\nEntrance of the HTML5 mini program. You can modify the entrance URL after the HTML5 mini program is created.\n\nThe following steps that are shown in gray in the above process flow are optional:\n\n- **IDE**\n\nYou can develop the HTML5 mini programs just like you develop HTML5 web pages.\n\n- **Build package process**\n- **Quality review**\n\nSee [procedures](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/transform-html5#E2kUW) for a step-by-step guide on how to transform an HTML5 mobile app (native app) into an HTML5 mini program.\n\n# Procedures\n\nTo transform HTML5 apps to mini programs, complete the following steps:\n\n## Step 1: Create the HTML 5 mini program\n\nWhen you create a new mini program, choose **Mini Program Based on HTML5** and enter the URL of your HTML5 mobile app into the **Entrance URL** field.\n\n![image](https://yuque.antfin.com/images/lark/0/2021/png/217662/1617847473575-1551bcf9-6716-4207-9bdb-4cd0e200110a.png)\n\nFor more information on creating mini programs, see [Create Mini Programs](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/create).\n\n## Step 2: Use wallet capabilities\n\nTo use the mini program JSAPIs, integrate the SDK according to your business requirements.\n\n### a. Mini Program JSAPIs in HTML5\n\nFollow the steps below to use mini program JSAPIs in HTML5:\n\n1. Import the JSBridge SDK by importing the following JS file to the HTML file:\n\ncopy\n\n```javascript\n<script src=\"https://cdn.marmot-cloud.com/npm/hylid-bridge/1.0.5/index.js\"></script>\n```\n\nSee the following HTML sample codes for reference:\n\ncopy\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Miniprogram JSAPI Demo</title>\n  <script src=\"https://cdn.marmot-cloud.com/npm/hylid-bridge/1.0.5/index.js\"></script>\n</head>\n<body>\n  <div>\n    <button id=\"alert\">my.alert</button>\n  </div>\n  <script>\n    var alertButton = document.getElementById('alert');\n    alertButton.addEventListener('click', function () {\n      my.alert({\n        title: 'Test Alert!!',\n        content: window.navigator.userAgent,\n        buttonText: 'Alert Button',\n        success: function (res) {\n          my.alert({\n            content: 'success!' + JSON.stringify(res),\n          });\n        },\n        fail: function () {\n          my.alert({\n            content: 'fail!',\n          });\n        },\n        complete: function () {\n          my.alert({\n            content: 'complete!',\n          });\n        },\n      });\n    });\n  </script>\n</body>\n</html>\n```\n\n2. Call an API from the following available API list. The parameter in the API is an object. Each API has the following properties:\n\n- **success**: callback function that indicates the successful API calling.\n\n- **fail**: callback function that indicates the failed API calling.\n\n- **complete**: callback function that indicates the completed API calling.\n\nTake the **my.alert** JSAPI as an example. In this API, **success**, **fail**, and **complete** are the common properties. Specific properties are **title**, **content**, and **buttonText**.\n\nFor example, see the following sample codes to know how the **IAlertOptions** interface can be defined:\n\ncopy\n\n```javascript\ninterface IAlertOptions {\n  title?: string;\n  content?: string;\n  buttonText?: string;\n  success?: () => void;\n  fail?: () => void;\n  complete?: () => void;\n}\n```\n\n#### Available API list\n\nThe following table lists all available JSAPIs. You can apply for your own JSAPIs if required.\n\n|     |     |\n| --- | --- |\n| **JSAPI Name** | **Description** |\n| [my.alert](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_alert) | Displays alert box. |\n| [my.confirm](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_confirm) | Displays confirmation box. |\n| [my.prompt](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_prompt) | Prompts a user input |\n| [my.showToast](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_showtoast) | Displays a toast, which disappears within certain seconds. |\n| [my.hideToast](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_hidetoast) | Hides a toast. |\n| [my.showLoading](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_showloading) | Displays the loading message. |\n| [my.hideLoading](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_feedback_hideloading) | Hides the loading message. |\n| [my.setNavigationBar](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_navigationbar_setnavigationbar) | Sets the navigation bar text and style. |\n| [my.showNavigationBarLoading](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_navigationbar_shownavigationbarloading) | Shows navigation bar loading. |\n| [my.hideNavigationBarLoading](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_navigationbar_hidenavigationbarloading) | Hides navigation bar loading. |\n| [my.request](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_network_request) | Network request |\n| [my.getSystemInfo](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_system_getsysteminfo) | Gets system information. |\n| [my.getNetworkType](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_network_getnetworktype) | Gets current network status. |\n| [my.showAuthGuide](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_permission_showauthguide) | Guides users to grant the authorization when the permission is needed. |\n| [my.getAuthCode](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_getauthcode) | Gets user's authorization code. |\n| [my.saveImage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_media_image_saveimage) | Saves online images to cellphone album. |\n| [my.chooseImage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_media_image_chooseimage) | Takes a photo or chooses a photo from the album on the phone. |\n| [my.previewImage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_media_image_previewimage) | Previews images. |\n| [my.getImageInfo](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_media_image_getimageinfo) | Gets image information. |\n| [my.hideKeyboard](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_keyboard_hidekeyboard) | Hides keyboard. |\n| [my.setStorage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_storage_setstorage) | Stores the data in the specified key in the local cache, which overlaps with the original data corresponding to the key. |\n| [my.getStorage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_storage_getstorage) | Gets cached data. |\n| [my.removeStorage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_storage_removestorage) | Removes cached data. |\n| [my.clearStorage](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_storage_clearstorage) | Clears local data cache. |\n| [my.tradePay](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_tradepay) | Initiates a payment. |\n| [my.navigateToMiniProgram](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_navigatetominiprogram) | Jumps to other mini programs. |\n| [my.navigateBackMiniProgram](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_openapi_navigatebackminiprogram) | Returns to the previous Mini Program, only when another Mini Program jumps to the current Mini Program. |\n| [my.getClipboard](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_clipboard_getclipboard) | Gets the clipboard data. |\n| [my.setClipboard](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_clipboard_setclipboard) | Sets the clipboard data. |\n| [my.vibrate](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_vibrate_vibrate) | Invokes the vibrate ability of the device. |\n| [my.makePhoneCall](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_device_call_makephonecall) | Makes a phone call. |\n| [my.multiLevelSelect](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_multi-level-select_multilevelselect) | Selects in multiple levels. |\n| [my.choosePhoneContact](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_ui_contact_choosephonecontact) | Chooses the phone number of a contact person |\n| [my.getLocation](https://miniprogram.gcash.com/docs/miniprogram_gcash/mpdev/api_location_getlocation) | Gets the current geographical location of the user. |\n\n### b. Open APIs\n\nDepending on the wallet capabilities, you can use different open APIs.\n\n## Step 3: Release the mini program\n\nYou can request to release the mini program after the development. Before you submit the release request for approval, you need to check if all the required information is filled in. Enter the required information under **Mini Programs** > **Info** if you find some required information is missing. For more information, see [Release Mini Programs](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/release) and [Approvals](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/approval).\n\nNow you have completed the process of transforming the HTML app into a mini program. You can start to manage the mini program on the platform. For more information, see [Manage Mini Program.](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/mini-program)\n\n## Precautions\n\n### Browser compatibility\n\nWhen the page is running in a browser, mini program JSAPIs cannot be called. You need to identify whether the page is running in a mini program or a browser by [UserAgent](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/transform-html5#9MczZ), and then take actions accordingly.\n\nSee the following sample codes for reference:\n\ncopy\n\n```javascript\nif (/MiniProgram/.test(navigator.userAgent)) {\n    my.tradePay(params)\n} else {\n    // process payment in other browsers.\n}\n```\n\n### UserAgent\n\nUserAgent which is retrieved via navigator.userAgent has some specific fields like **MiniProgram**, which can be used to identify whether the web page runs as an HTML mini program.\n\nFor a whole UserAgent, see the following sample codes for reference:\n\ncopy\n\n```plaintext\nMozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/18D46 ChannelId(35) Ariver/1.0.11 Griver/2.23.0 AppContainer/1.9.1 MiniProgram\n```\n\n## Restrictions\n\n### Reserved objects\n\nmy.JSBridge is reserved for global objectsdefined in the PWA runtime, and you cannot modify them.\n\n### console.log\n\nThe PWA runtime strongly depends on the default console.log object in the web context, which cannot be overridden or modified.\n\n# More information\n\n[Manage Mini Programs](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/mini-program)\n\n[Mini Program types](https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/miniprogramtype)",
  "date": "2022-07-07",
  "source": "https://miniprogram.gcash.com/docs/miniprogram_gcash/platform/transform-html5",
  "path": "miniprogram_gcash",
  "type": "miniprogram",
  "filename": "miniprogram.gcash.com_docs_miniprogram_gcash_platform_transform-html5.json"
}